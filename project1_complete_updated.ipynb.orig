{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "from tqdm import tqdm\n",
    "import time\n",
    "import pandas as pd\n",
    "import string\n",
    "import nltk\n",
    "from nltk.corpus import stopwords\n",
    "stop_words = set(stopwords.words('english'))\n",
    "from collections import defaultdict\n",
    "import itertools\n",
    "from urllib.parse import parse_qs\n",
    "import glob\n",
    "import matplotlib.pylab as plt\n",
    "from collections import Counter\n",
    "import collections\n",
    "from nltk.tokenize import word_tokenize\n",
    "from nltk.tokenize import RegexpTokenizer\n",
    "import csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_job_links_page(page):\n",
    "    base_url = \"https://www.indeed.com/jobs?\"\n",
    "    params = {'q': 'data scientist', \n",
    "             'l': 'Boulder, CO'}\n",
    "    \n",
    "    #we've downloaded job listings in Denver and Boulder for the following search terms: \n",
    "    #data analyst, business analyst and data scientist \n",
    "    # start = \"https://www.indeed.com/jobs?q=Data+Scientist&l=Denver%2C+CO\"\n",
    "    # use a fake header\n",
    "    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36'}\n",
    "    params['start'] = 10 * (page-1)\n",
    "\n",
    "    page = requests.get(base_url, params=params, headers=headers)\n",
    "    # test = requests.get(start, headers=headers)\n",
    "    \n",
    "    soup = BeautifulSoup(page.text, \"html.parser\")\n",
    "    links = soup.find_all(\"a\")\n",
    "    \n",
    "    # build a list of links\n",
    "    some_links = []\n",
    "\n",
    "    for l in links:\n",
    "        try:\n",
    "            hyperlink = l.attrs.get('href')\n",
    "            if \"/rc/clk?\" in hyperlink:\n",
    "                some_links.append(l.attrs.get('href'))\n",
    "        except:\n",
    "            pass\n",
    "    \n",
    "    job_links = [\"https://www.indeed.com{}\".format(x)\n",
    "             for x in some_links\n",
    "             ]\n",
    "    \n",
    "    return job_links\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "links = [get_job_links_page(x) for x in tqdm(range(1, 100))] # getting a link for 39 pages "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(links)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'https://www.indeed.com/rc/clk?jk=0adac19f5e68e118&fccid=3d2456270cbb298b&vjs=3'"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged = list(itertools.chain(*links))\n",
    "len(merged)\n",
    "merged[0] # getting a link for 39 pages "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_filename_from_url(some_url):\n",
    "    parsed = parse_qs(some_url)\n",
    "    fccid =  parsed.get('fccid')[0]\n",
    "    other_id = parsed.get('https://www.indeed.com/rc/clk?jk')[0]\n",
    "    return fccid+other_id+ \".html\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'3d2456270cbb298b0adac19f5e68e118.html'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "get_filename_from_url(merged[0]) # file name for each html file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "250"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(set([get_filename_from_url(x) for x in merged])) # the total number of html files(jobs) parsed and saved locally. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "#downloading each html file as a soup object\n",
    "def download_job_page(link):\n",
    "    save_name = get_filename_from_url(link)\n",
    "    \n",
    "    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36'}\n",
    "    test = requests.get(link, headers=headers)\n",
    "    soup = BeautifulSoup(test.text, \"html.parser\")\n",
    "    \n",
    "    with open('data_scienceBoulder_{}'.format(save_name), 'w') as f:\n",
    "        f.write(str(soup))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 375/375 [09:25<00:00,  1.51s/it]\n"
     ]
    }
   ],
   "source": [
    "for link in tqdm(merged):\n",
    "    try:\n",
    "        download_job_page(link)\n",
    "    except Exception as e:\n",
    "        print(str(e), link)\n",
    "    finally:\n",
    "        time.sleep(1)\n"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 11,
=======
   "execution_count": 2,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
<<<<<<< HEAD
       "250"
      ]
     },
     "execution_count": 11,
=======
       "1775"
      ]
     },
     "execution_count": 2,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "html = glob.glob('*.html')\n",
    "len(html) # the total number of html files(jobs) parsed and saved locally. "
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 12,
=======
   "execution_count": 3,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
<<<<<<< HEAD
      "The job summary field does not exist.\n"
=======
      "The company field does not exist in: data_anaBoulder_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The location field does not exist in: data_anaBoulder_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The jobtitle field does not exist in: data_anaBoulder_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The job summary field does not exist in: data_anaBoulder_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The company field does not exist in: data_anaBoulder_e370394a608927d2bdbafd2459667aad.html\n",
      "The location field does not exist in: data_anaBoulder_e370394a608927d2bdbafd2459667aad.html\n",
      "The jobtitle field does not exist in: data_anaBoulder_e370394a608927d2bdbafd2459667aad.html\n",
      "The job summary field does not exist in: data_anaBoulder_e370394a608927d2bdbafd2459667aad.html\n",
      "The company field does not exist in: data_analyst_2803441767d1ee9b995baf321d58e9c9.html\n",
      "The location field does not exist in: data_analyst_2803441767d1ee9b995baf321d58e9c9.html\n",
      "The jobtitle field does not exist in: data_analyst_2803441767d1ee9b995baf321d58e9c9.html\n",
      "The job summary field does not exist in: data_analyst_2803441767d1ee9b995baf321d58e9c9.html\n",
      "The company field does not exist in: data_analyst_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The location field does not exist in: data_analyst_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The jobtitle field does not exist in: data_analyst_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The job summary field does not exist in: data_analyst_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The company field does not exist in: data_analyst_b763f6529150129539520cb745d66b1c.html\n",
      "The location field does not exist in: data_analyst_b763f6529150129539520cb745d66b1c.html\n",
      "The jobtitle field does not exist in: data_analyst_b763f6529150129539520cb745d66b1c.html\n",
      "The job summary field does not exist in: data_analyst_b763f6529150129539520cb745d66b1c.html\n",
      "The company field does not exist in: data_analyst_f1d6a4b795926f18a06df08d32b3ac1c.html\n",
      "The location field does not exist in: data_analyst_f1d6a4b795926f18a06df08d32b3ac1c.html\n",
      "The jobtitle field does not exist in: data_analyst_f1d6a4b795926f18a06df08d32b3ac1c.html\n",
      "The job summary field does not exist in: data_analyst_f1d6a4b795926f18a06df08d32b3ac1c.html\n",
      "The company field does not exist in: data_science_e370394a608927d2bdbafd2459667aad.html\n",
      "The location field does not exist in: data_science_e370394a608927d2bdbafd2459667aad.html\n",
      "The jobtitle field does not exist in: data_science_e370394a608927d2bdbafd2459667aad.html\n",
      "The job summary field does not exist in: data_science_e370394a608927d2bdbafd2459667aad.html\n",
      "The company field does not exist in: jrj_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The location field does not exist in: jrj_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The jobtitle field does not exist in: jrj_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The job summary field does not exist in: jrj_5c2fb4d168d95f8e30dbdc723d33fa73.html\n",
      "The company field does not exist in: jrj_9a989ebfc097894adfee7a185180dc8a.html\n",
      "The location field does not exist in: jrj_9a989ebfc097894adfee7a185180dc8a.html\n",
      "The jobtitle field does not exist in: jrj_9a989ebfc097894adfee7a185180dc8a.html\n",
      "The job summary field does not exist in: jrj_9a989ebfc097894adfee7a185180dc8a.html\n",
      "The company field does not exist in: jrj_e1b22e7cbe9b97d2b93d97d2e160a0d9.html\n",
      "The location field does not exist in: jrj_e1b22e7cbe9b97d2b93d97d2e160a0d9.html\n",
      "The jobtitle field does not exist in: jrj_e1b22e7cbe9b97d2b93d97d2e160a0d9.html\n",
      "The job summary field does not exist in: jrj_e1b22e7cbe9b97d2b93d97d2e160a0d9.html\n",
      "The company field does not exist in: jrj_edd6757e2758ac7652353ca0e0c496ef.html\n",
      "The location field does not exist in: jrj_edd6757e2758ac7652353ca0e0c496ef.html\n",
      "The jobtitle field does not exist in: jrj_edd6757e2758ac7652353ca0e0c496ef.html\n",
      "The job summary field does not exist in: jrj_edd6757e2758ac7652353ca0e0c496ef.html\n",
      "The company field does not exist in: jrj_f1d6a4b795926f18a06df08d32b3ac1c.html\n",
      "The location field does not exist in: jrj_f1d6a4b795926f18a06df08d32b3ac1c.html\n",
      "The jobtitle field does not exist in: jrj_f1d6a4b795926f18a06df08d32b3ac1c.html\n",
      "The job summary field does not exist in: jrj_f1d6a4b795926f18a06df08d32b3ac1c.html\n"
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     ]
    },
    {
     "data": {
      "text/plain": [
<<<<<<< HEAD
       "249"
      ]
     },
     "execution_count": 12,
=======
       "1763"
      ]
     },
     "execution_count": 3,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "html_divs = []\n",
    "columns = ['company', 'location', 'jobtitle', 'job_summary', 'type']\n",
    "jobs_df = pd.DataFrame(index=html, columns=columns)\n",
    "\n",
    "for html_file in html:\n",
    "    with open(html_file, 'r',encoding=\"ISO-8859-1\") as f:\n",
    "        _data = BeautifulSoup(f.read(), \"html.parser\")\n",
    "        try:\n",
    "            has_span_job_summary = _data.find(\"span\", id=\"job_summary\").get_text()\n",
    "            html_divs.append(has_span_job_summary)\n",
    "            jobs_df['company'][html_file] = _data.find(\"span\", \"company\").get_text()\n",
    "        except:\n",
    "            print('The company field does not exist in: ' + html_file)\n",
    "        try:\n",
    "            jobs_df['location'][html_file] = _data.find(\"span\", \"location\").get_text()\n",
    "        except:\n",
    "            print('The location field does not exist in: ' + html_file)\n",
    "        try:\n",
    "            jobs_df['jobtitle'][html_file] = _data.find(\"b\", \"jobtitle\").get_text()\n",
    "        except:\n",
    "            print('The jobtitle field does not exist in: ' + html_file)\n",
    "        try:\n",
    "            jobs_df['job_summary'][html_file] = _data.find(\"span\", id=\"job_summary\").get_text()\n",
    "        except:\n",
    "            print('The job summary field does not exist in: ' + html_file)\n",
    "        \n",
    "len(html_divs) # total numbers of job postings saved locally. "
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 13,
=======
   "execution_count": 4,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>job_summary</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
<<<<<<< HEAD
       "      <td>Accelerate Your Career\\nDrive global technolog...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>The National Renewable Energy Laboratory (NREL...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Who We Are:\\n\\n\\nBall Aerospace leads the way ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Who We Are:\\n\\n\\nBall Aerospace leads the way ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Do you want to help eliminate barriers between...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Data Scientist\\nOur innovation lab in Boulder,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>About the Job Nexant Utility Services, a consu...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Who We Are:\\n\\n\\nBall Aerospace leads the way ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Sales Insights Analyst\\n\\n18WD28844\\nAmericas-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Who We Are:\\n\\n\\nBall Aerospace leads the way ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Kleinfelder has been connecting great people t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Who We Are:\\n\\nBall Aerospace leads the way in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Who We Are:\\n\\n\\nBall Aerospace leads the way ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Who We Are:\\n\\nBall Aerospace leads the way in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Who We Are:\\n\\n\\nBall Aerospace leads the way ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Job Summary\\n\\nRADARSÂ® System Business Manage...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Working at ICF\\n\\n\\nWorking at ICF means apply...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Who We Are:\\n\\nBall Aerospace leads the way in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Who We Are:\\n\\n\\nBall Aerospace leads the way ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Who We Are:\\n\\nBall Aerospace leads the way in...</td>\n",
=======
       "      <td>Come join a fast-paced technology organization...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Summary\\nThe Business Intelligence Analyst is ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Data Administrator\\nFlexential stands for some...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>The Institutional Planning &amp; Analysis departme...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Location(s): CO - Denver; MN - Minneapolis\\n\\n...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Perform business architecture, Human Resources...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Working as a member of Blue Moon Digital, Inc....</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Dedicated to quality, innovation, engagement, ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Job Description\\n\\nRLH Revenue Team Overview:\\...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Arcadis is looking for an experienced Manageme...</td>\n",
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
<<<<<<< HEAD
       "                                          job_summary\n",
       "0   Accelerate Your Career\\nDrive global technolog...\n",
       "1   The National Renewable Energy Laboratory (NREL...\n",
       "2   Who We Are:\\n\\n\\nBall Aerospace leads the way ...\n",
       "3   Who We Are:\\n\\n\\nBall Aerospace leads the way ...\n",
       "4   Do you want to help eliminate barriers between...\n",
       "5   Data Scientist\\nOur innovation lab in Boulder,...\n",
       "6   About the Job Nexant Utility Services, a consu...\n",
       "7   Who We Are:\\n\\n\\nBall Aerospace leads the way ...\n",
       "8   Sales Insights Analyst\\n\\n18WD28844\\nAmericas-...\n",
       "9   Who We Are:\\n\\n\\nBall Aerospace leads the way ...\n",
       "10  Kleinfelder has been connecting great people t...\n",
       "11  Who We Are:\\n\\nBall Aerospace leads the way in...\n",
       "12  Who We Are:\\n\\n\\nBall Aerospace leads the way ...\n",
       "13  Who We Are:\\n\\nBall Aerospace leads the way in...\n",
       "14  Who We Are:\\n\\n\\nBall Aerospace leads the way ...\n",
       "15  Job Summary\\n\\nRADARSÂ® System Business Manage...\n",
       "16  Working at ICF\\n\\n\\nWorking at ICF means apply...\n",
       "17  Who We Are:\\n\\nBall Aerospace leads the way in...\n",
       "18  Who We Are:\\n\\n\\nBall Aerospace leads the way ...\n",
       "19  Who We Are:\\n\\nBall Aerospace leads the way in..."
      ]
     },
     "execution_count": 13,
=======
       "                                         job_summary\n",
       "0  Come join a fast-paced technology organization...\n",
       "1  Summary\\nThe Business Intelligence Analyst is ...\n",
       "2  Data Administrator\\nFlexential stands for some...\n",
       "3  The Institutional Planning & Analysis departme...\n",
       "4  Location(s): CO - Denver; MN - Minneapolis\\n\\n...\n",
       "5  Perform business architecture, Human Resources...\n",
       "6  Working as a member of Blue Moon Digital, Inc....\n",
       "7  Dedicated to quality, innovation, engagement, ...\n",
       "8  Job Description\\n\\nRLH Revenue Team Overview:\\...\n",
       "9  Arcadis is looking for an experienced Manageme..."
      ]
     },
     "execution_count": 4,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jobs = pd.DataFrame(html_divs)\n",
    "jobs.columns = ['job_summary']\n",
    "jobs.head(10)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 14,
=======
   "execution_count": 5,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
<<<<<<< HEAD
       "(249, 1)"
      ]
     },
     "execution_count": 14,
=======
       "(1763, 1)"
      ]
     },
     "execution_count": 5,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jobs.shape"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 15,
=======
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "df1=pd.read_csv('hacker_news.csv')\n",
    "df1['company'] = \"\"\n",
    "df1['location'] = \"\"\n",
    "df1['jobtitle'] = \"\"\n",
    "df1['type'] = \"\"\n",
    "df1['partitions'] = 0\n",
    "# del df1['source']\n",
    "df1.rename(columns={'desc': 'job_summary'}, inplace=True)\n",
    "df1 = df1.drop_duplicates()\n",
    "for i, row in df1.iterrows():\n",
    "    s=row['job_summary']\n",
    "    sp = [x.strip() for x in s.split('|')]\n",
    "    df1.loc[i,('partitions')] = len(sp)\n",
    "    if len(sp) > 1:\n",
    "        df1.loc[i,('company')] = sp[0]\n",
    "    if len(sp) == 2:\n",
    "        sp1 = sp[1].split('<p>')\n",
    "        df1.loc[i,('location')] = sp1[0]\n",
    "        sp2 = sp1[1].split(':')\n",
    "        if len(sp2) == 1:\n",
    "            df1.loc[i,('job_summary')] = sp1[1]\n",
    "        if len(sp2) == 2:\n",
    "            df1.loc[i,('jobtitle')] = sp2[0]\n",
    "            df1.loc[i,('job_summary')] = sp2[1]\n",
    "    if len(sp) == 3:\n",
    "       df1.loc[i,('location')] = sp[1]\n",
    "       df1.loc[i,('jobtitle')] = sp[1]\n",
    "       df1.loc[i,('job_summary')] = sp[2]\n",
    "    if len(sp) > 3:\n",
    "       df1.loc[i,('location')] = sp[1] + ' ' + sp[2]\n",
    "       df1.loc[i,('jobtitle')] = sp[1] + ' ' + sp[2]\n",
    "       df1.loc[i,('job_summary')] = sp[-1]\n",
    "    if len(sp) > 4:\n",
    "       df1.loc[i,('type')] = ' '.join(sp[3:-1]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company</th>\n",
       "      <th>location</th>\n",
       "      <th>jobtitle</th>\n",
       "      <th>job_summary</th>\n",
       "      <th>type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Photofeeler (&lt;a href=\"https:&amp;#x2F;&amp;#x2F;www.ph...</td>\n",
       "      <td>Software Engineers, Marketing Roles</td>\n",
       "      <td>Software Engineers, Marketing Roles</td>\n",
       "      <td>REMOTE or Onsite near Boulder, CO&lt;p&gt;If you wer...</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Q-Branch Labs (&lt;a href=\"https:&amp;#x2F;&amp;#x2F;www....</td>\n",
       "      <td>Marketing Director, Hardware Product Manager, ...</td>\n",
       "      <td>Marketing Director, Hardware Product Manager, ...</td>\n",
       "      <td>£50-75K + equity&lt;p&gt;Join a team helping to prot...</td>\n",
       "      <td>London ONSITE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>Worldwide, REMOTE, full time or part time -- 1...</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Lendable</td>\n",
       "      <td>Senior Software Engineers, Senior Devops Engin...</td>\n",
       "      <td>Senior Software Engineers, Senior Devops Engin...</td>\n",
       "      <td>&lt;p&gt;&lt;a href=\"https:&amp;#x2F;&amp;#x2F;www.lendable.co....</td>\n",
       "      <td>Full Time Onsite Salary: £60k-£80k</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Gambit Research Ltd (&lt;a href=\"http:&amp;#x2F;&amp;#x2F...</td>\n",
       "      <td>London, UK ONSITE</td>\n",
       "      <td>London, UK ONSITE</td>\n",
       "      <td>£40-80k + Bonus&lt;p&gt;Gambit Research specialises ...</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             company  \\\n",
       "0  Photofeeler (<a href=\"https:&#x2F;&#x2F;www.ph...   \n",
       "1  Q-Branch Labs (<a href=\"https:&#x2F;&#x2F;www....   \n",
       "2                                                      \n",
       "3                                           Lendable   \n",
       "4  Gambit Research Ltd (<a href=\"http:&#x2F;&#x2F...   \n",
       "\n",
       "                                            location  \\\n",
       "0                Software Engineers, Marketing Roles   \n",
       "1  Marketing Director, Hardware Product Manager, ...   \n",
       "2                                                      \n",
       "3  Senior Software Engineers, Senior Devops Engin...   \n",
       "4                                  London, UK ONSITE   \n",
       "\n",
       "                                            jobtitle  \\\n",
       "0                Software Engineers, Marketing Roles   \n",
       "1  Marketing Director, Hardware Product Manager, ...   \n",
       "2                                                      \n",
       "3  Senior Software Engineers, Senior Devops Engin...   \n",
       "4                                  London, UK ONSITE   \n",
       "\n",
       "                                         job_summary  \\\n",
       "0  REMOTE or Onsite near Boulder, CO<p>If you wer...   \n",
       "1  £50-75K + equity<p>Join a team helping to prot...   \n",
       "2  Worldwide, REMOTE, full time or part time -- 1...   \n",
       "3  <p><a href=\"https:&#x2F;&#x2F;www.lendable.co....   \n",
       "4  £40-80k + Bonus<p>Gambit Research specialises ...   \n",
       "\n",
       "                                 type  \n",
       "0                                      \n",
       "1                       London ONSITE  \n",
       "2                                      \n",
       "3  Full Time Onsite Salary: £60k-£80k  \n",
       "4                                      "
      ]
     },
<<<<<<< HEAD
     "execution_count": 15,
=======
     "execution_count": 21,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1 = df1[['company', 'location', 'jobtitle', 'job_summary', 'type']]\n",
    "all_jobs=pd.concat([df1,jobs_df])\n",
    "all_jobs.head(5)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 16,
=======
   "execution_count": 8,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
<<<<<<< HEAD
       "(2783, 1)"
      ]
     },
     "execution_count": 16,
=======
       "(4292, 5)"
      ]
     },
     "execution_count": 8,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_jobs.shape "
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 17,
=======
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_skills_list():\n",
    "    skills = pd.read_csv('skill_phrases_purged_JBM.csv', encoding=\"ISO-8859-1\")\n",
    "    skills.columns = ['skill_name']\n",
    "    skills['skill_name'] = skills.skill_name.map(lambda x:x.lower().strip())\n",
    "    return skills.skill_name.tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_skills_df():# the macro enabled excel file. \n",
    "    skills = pd.read_csv('skill_phrases_purged-JBM.csv', usecols=['Skill Name', 'I Have It']).fillna(False)\n",
    "    tokenizer = RegexpTokenizer(r'[a-zA-Z0-9#+-]+')\n",
    "    skills['WL'] = [tokenizer.tokenize(skill_phrase) for skill_phrase in skills['Skill Name']]\n",
    "    return skills"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
<<<<<<< HEAD
       "(2766,)"
      ]
     },
     "execution_count": 17,
=======
       "154"
      ]
     },
     "execution_count": 38,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
<<<<<<< HEAD
    "all_jobs.job_summary.unique().shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "def load_skills_list():\n",
    "    import pandas as pd\n",
    "    skills = pd.read_csv('skill_phrases-JBM.csv', encoding=\"ISO-8859-1\")\n",
    "    skills.columns = ['skill_name']\n",
    "    skills['skill_name'] = skills.skill_name.map(lambda x: \n",
    "                                               x.lower().strip())\n",
    "    return skills.skill_name.tolist()\n"
=======
    "len(skills)"
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 19,
=======
   "execution_count": 11,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [],
   "source": [
    "list_of_skills = load_skills_list()\n",
    "skills = load_skills_df()"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 20,
=======
   "execution_count": 12,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [],
   "source": [
    "#make a big string of all job descriptions\n",
    "try:\n",
    "    job_string = \" \".join([str(x) for x in all_jobs.job_summary.tolist()])\n",
    "except:\n",
    "    job_string = \" \"\n",
    "    \n",
    "job_tokens = nltk.word_tokenize(job_string)  \n",
    "job_tokens = [word for word in job_tokens if len(word) >= 1] # remove space \n",
    "job_tokens = [word for word in job_tokens if not word in stop_words] # remove english language stop words \n",
    "job_tokens = [word.lower().strip() for word in job_tokens if not word in string.punctuation]\n",
    "\n",
    "\n",
    "assert(type(job_tokens) == list)\n",
    "\n",
    "filtered = Counter([x for x in job_tokens if x in list_of_skills])"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 21,
=======
   "execution_count": 13,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
<<<<<<< HEAD
       "[('software', 1960),\n",
       " ('engineers', 1217),\n",
       " ('engineering', 1205),\n",
       " ('development', 1101),\n",
       " ('design', 810),\n",
       " ('stack', 781),\n",
       " ('developer', 704),\n",
       " ('python', 583),\n",
       " ('react', 562),\n",
       " ('web', 526),\n",
       " ('backend', 456),\n",
       " ('code', 446),\n",
       " ('research', 411),\n",
       " ('analysis', 397),\n",
       " ('aws', 348),\n",
       " ('frontend', 346),\n",
       " ('javascript', 335),\n",
       " ('mobile', 332),\n",
       " ('communication', 297),\n",
       " ('access', 284),\n",
       " ('java', 260),\n",
       " ('cloud', 256),\n",
       " ('analytics', 247),\n",
       " ('ruby', 240),\n",
       " ('ios', 219),\n",
       " ('hardware', 218),\n",
       " ('front-end', 214),\n",
       " ('full-stack', 213),\n",
       " ('android', 210),\n",
       " ('docker', 187),\n",
       " ('c', 182),\n",
       " ('manage', 181),\n",
       " ('app', 178),\n",
       " ('sensors', 172),\n",
       " ('it', 171),\n",
       " ('safe', 166),\n",
       " ('programming', 160),\n",
       " ('imaging', 159),\n",
       " ('apps', 150),\n",
       " ('c++', 143),\n",
       " ('ai', 138),\n",
       " ('leadership', 136),\n",
       " ('django', 133),\n",
       " ('api', 131),\n",
       " ('ui', 127),\n",
       " ('linux', 126),\n",
       " ('models', 126),\n",
       " ('node', 125),\n",
       " ('ux', 124),\n",
       " ('sql', 122)]"
      ]
     },
     "execution_count": 21,
=======
       "[('software', 2773),\n",
       " ('research', 2274),\n",
       " ('analytics', 1221),\n",
       " ('python', 875),\n",
       " ('sql', 776),\n",
       " ('access', 763),\n",
       " ('leadership', 758),\n",
       " ('developer', 621),\n",
       " ('database', 571),\n",
       " ('programming', 541),\n",
       " ('react', 514),\n",
       " ('aws', 454),\n",
       " ('social', 417),\n",
       " ('bi', 401),\n",
       " ('java', 389),\n",
       " ('hardware', 388),\n",
       " ('javascript', 386),\n",
       " ('agile', 384),\n",
       " ('backend', 345),\n",
       " ('server', 282)]"
      ]
     },
     "execution_count": 13,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "filtered.most_common(20) # looking across skill frequency for all jobs, one way to do it"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 22,
=======
   "execution_count": 14,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_matching_skills_for_search_kw(search_term, dataframe_name, load_skills_list):\n",
    "\n",
    "    matches = defaultdict(int)\n",
    "\n",
    "    for index, row in dataframe_name.iterrows():\n",
    "        job_desc = row.job_summary # local specificity \n",
    "        if type(job_desc) == str:\n",
    "            job_tokens = nltk.word_tokenize(job_desc)\n",
    "            job_tokens = [word for word in job_tokens if len(word) >= 2] # remove space \n",
    "            job_tokens = [word for word in job_tokens if not word in stop_words] # remove english language stop words \n",
    "            job_tokens = [word.lower().strip() for word in job_tokens if not word in string.punctuation ] \n",
    "\n",
    "            if search_term in job_tokens:\n",
    "                for skill in list_of_skills:\n",
    "                    if (skill in job_tokens):\n",
    "                        matches[skill] += 1\n",
    "\n",
    "    return Counter(matches)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 23,
=======
   "execution_count": 15,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [],
   "source": [
    "LIST_OF_QUERIES = ['excel','vba','python','sql','javascript','java'] \n",
    "\n",
    "all_matches =  { query: get_matching_skills_for_search_kw(query, \n",
    "                                                all_jobs, \n",
    "                                                list_of_skills) \n",
    "               for query in LIST_OF_QUERIES  }"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 24,
=======
   "execution_count": 16,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
<<<<<<< HEAD
       "{'sql': Counter({'it': 9,\n",
       "          'developer': 26,\n",
       "          '.net': 10,\n",
       "          'angular': 10,\n",
       "          'github': 1,\n",
       "          'stack': 35,\n",
       "          'sql': 100,\n",
       "          'django': 9,\n",
       "          'php': 17,\n",
       "          'development': 49,\n",
       "          'javascript': 99,\n",
       "          'java': 54,\n",
       "          'software': 59,\n",
       "          'python': 114,\n",
       "          'ruby': 16,\n",
       "          'mobile': 18,\n",
       "          'web': 76,\n",
       "          'node.js': 18,\n",
       "          'jquery': 16,\n",
       "          'mysql': 12,\n",
       "          'postgres': 8,\n",
       "          'server': 18,\n",
       "          'android': 9,\n",
       "          'ms': 2,\n",
       "          'ios': 9,\n",
       "          'react': 26,\n",
       "          'models': 17,\n",
       "          'hadoop': 6,\n",
       "          'linux': 28,\n",
       "          'css': 11,\n",
       "          'js': 8,\n",
       "          'frontend': 10,\n",
       "          'azure': 8,\n",
       "          'cloud': 21,\n",
       "          'c++': 11,\n",
       "          'controls': 3,\n",
       "          'modeling': 22,\n",
       "          'docker': 16,\n",
       "          'databases': 11,\n",
       "          'restful': 2,\n",
       "          'backend': 38,\n",
       "          'initiative': 3,\n",
       "          'code': 23,\n",
       "          'api': 13,\n",
       "          'postgresql': 10,\n",
       "          'aws': 24,\n",
       "          'front-end': 9,\n",
       "          'engineering': 68,\n",
       "          'oracle': 7,\n",
       "          'database': 13,\n",
       "          'full-stack': 12,\n",
       "          'analytics': 48,\n",
       "          'statistics': 16,\n",
       "          'apis': 8,\n",
       "          'communication': 21,\n",
       "          'scripting': 6,\n",
       "          'interpersonal': 5,\n",
       "          'git': 16,\n",
       "          'engineers': 34,\n",
       "          'healthcare': 3,\n",
       "          'app': 8,\n",
       "          'networking': 3,\n",
       "          'social': 3,\n",
       "          'unix': 2,\n",
       "          'finance': 4,\n",
       "          'shell': 3,\n",
       "          'coding': 20,\n",
       "          'programming': 40,\n",
       "          'cron': 4,\n",
       "          'html': 9,\n",
       "          'sass': 3,\n",
       "          'angularjs': 6,\n",
       "          'dynamodb': 4,\n",
       "          'facebook': 3,\n",
       "          'cms': 2,\n",
       "          'node': 6,\n",
       "          'ai': 1,\n",
       "          'planning': 8,\n",
       "          'tdd': 2,\n",
       "          'access': 11,\n",
       "          'es6': 3,\n",
       "          'apps': 5,\n",
       "          'nosql': 7,\n",
       "          'back-end': 5,\n",
       "          'manage': 10,\n",
       "          'analysts': 20,\n",
       "          'agile': 26,\n",
       "          'ui': 9,\n",
       "          'qa': 4,\n",
       "          'ux': 3,\n",
       "          'graphql': 3,\n",
       "          'optimization': 10,\n",
       "          'webpack': 6,\n",
       "          'crm': 2,\n",
       "          'personalization': 1,\n",
       "          'adobe': 2,\n",
       "          'scrum': 2,\n",
       "          'qlikview': 2,\n",
       "          'analyst': 6,\n",
       "          'data-driven': 7,\n",
       "          'statistical': 11,\n",
       "          'analytic': 6,\n",
       "          'redshift': 5,\n",
       "          'collaborative': 5,\n",
       "          'redis': 7,\n",
       "          'elasticsearch': 10,\n",
       "          'analysis': 42,\n",
       "          'investing': 2,\n",
       "          'vue': 2,\n",
       "          'pandas': 8,\n",
       "          'algorithmic': 4,\n",
       "          'collaborate': 6,\n",
       "          'splunk': 3,\n",
       "          'spark': 10,\n",
       "          'apache': 5,\n",
       "          'design': 25,\n",
       "          'frameworks': 9,\n",
       "          'mentoring': 5,\n",
       "          'writing': 6,\n",
       "          'scala': 4,\n",
       "          'safe': 9,\n",
       "          'kinesis': 2,\n",
       "          'kafka': 4,\n",
       "          'algorithms': 5,\n",
       "          'ml': 3,\n",
       "          'ansible': 2,\n",
       "          'metadata': 3,\n",
       "          'banking': 1,\n",
       "          'etl': 9,\n",
       "          'english': 4,\n",
       "          'json': 6,\n",
       "          'saas': 4,\n",
       "          'clojure': 2,\n",
       "          'bi': 6,\n",
       "          'analyze': 10,\n",
       "          'datasets': 4,\n",
       "          'tableau': 5,\n",
       "          'research': 8,\n",
       "          'analytical': 9,\n",
       "          'mongodb': 6,\n",
       "          'bachelors': 1,\n",
       "          'robotics': 1,\n",
       "          'model': 8,\n",
       "          'lamp': 2,\n",
       "          'bootstrap': 1,\n",
       "          'twitter': 1,\n",
       "          'linkedin': 1,\n",
       "          'phd': 10,\n",
       "          'efficiency': 4,\n",
       "          'net': 1,\n",
       "          'fintech': 1,\n",
       "          'targeting': 1,\n",
       "          'dom': 1,\n",
       "          'nlp': 2,\n",
       "          'nodejs': 2,\n",
       "          'd3': 6,\n",
       "          'visualization': 26,\n",
       "          'acquisition': 3,\n",
       "          'self-motivated': 5,\n",
       "          'streaming': 2,\n",
       "          'perl': 12,\n",
       "          'solr': 2,\n",
       "          's3': 3,\n",
       "          'emr': 2,\n",
       "          'hardware': 4,\n",
       "          'unstructured': 3,\n",
       "          'petabyte': 1,\n",
       "          'os': 2,\n",
       "          'desktop': 3,\n",
       "          'mapreduce': 2,\n",
       "          'pytorch': 1,\n",
       "          'tensorflow': 3,\n",
       "          'scikit-learn': 5,\n",
       "          'keras': 1,\n",
       "          'xml': 5,\n",
       "          'imaging': 3,\n",
       "          'sensors': 6,\n",
       "          'bs': 5,\n",
       "          'ph.d.': 3,\n",
       "          'classification': 5,\n",
       "          'website': 1,\n",
       "          'clustering': 6,\n",
       "          'sampling': 1,\n",
       "          'analyzing': 4,\n",
       "          'shiny': 1,\n",
       "          'groovy': 1,\n",
       "          'erp': 1,\n",
       "          'mentor': 3,\n",
       "          'excel': 5,\n",
       "          'object-oriented': 1,\n",
       "          'leadership': 8,\n",
       "          'econometric': 1,\n",
       "          'regulatory': 4,\n",
       "          'economics': 4,\n",
       "          'stata': 2,\n",
       "          'regression': 4,\n",
       "          'detail-oriented': 1,\n",
       "          'julia': 1,\n",
       "          'multi-task': 2,\n",
       "          'econometrics': 1,\n",
       "          'numpy': 6,\n",
       "          'alteryx': 2,\n",
       "          'scipy': 2,\n",
       "          'gis': 5,\n",
       "          'accessibility': 2,\n",
       "          'templates': 2,\n",
       "          'analyses': 4,\n",
       "          'workflow': 2,\n",
       "          'powerpoint': 3,\n",
       "          'arcgis': 4,\n",
       "          'esri': 4,\n",
       "          'windows': 2,\n",
       "          'prototyping': 4,\n",
       "          'hive': 10,\n",
       "          'quicksight': 1,\n",
       "          'presto': 1,\n",
       "          'optimize': 1,\n",
       "          'circonus': 1,\n",
       "          'databricks': 1,\n",
       "          'a/b': 1,\n",
       "          'mathematics': 8,\n",
       "          'bayesian': 1,\n",
       "          'graphs': 1,\n",
       "          'time-management': 1,\n",
       "          'dashboards': 1,\n",
       "          'troubleshooting': 2,\n",
       "          'pig': 2,\n",
       "          'matlab': 20,\n",
       "          'clarity': 1,\n",
       "          'cognitive': 2,\n",
       "          'caffe': 1,\n",
       "          'sas': 2,\n",
       "          'demography': 1,\n",
       "          'spss': 1,\n",
       "          'less': 1,\n",
       "          'qlik': 1,\n",
       "          'sap': 1,\n",
       "          'ssrs': 1,\n",
       "          't-sql': 1,\n",
       "          'statistician': 1,\n",
       "          'storm': 1,\n",
       "          'fpga': 1,\n",
       "          'geodatabase': 2,\n",
       "          'geojson': 4,\n",
       "          'bigdata': 4,\n",
       "          'geokettle': 2,\n",
       "          'broadcast': 3,\n",
       "          'math': 4,\n",
       "          'postgis': 2,\n",
       "          'kettle': 2,\n",
       "          'seo': 2,\n",
       "          'ftp': 2,\n",
       "          'simulation': 2,\n",
       "          'logic': 3,\n",
       "          'k-means': 2,\n",
       "          'informatica': 2,\n",
       "          'cartodb': 2,\n",
       "          'geoserver': 3,\n",
       "          'socrata': 1,\n",
       "          'svn': 1,\n",
       "          'openrefine': 1,\n",
       "          'rdbms/dba': 1}),\n",
       " 'python': Counter({'development': 127,\n",
       "          'python': 926,\n",
       "          'analytics': 108,\n",
       "          'ansible': 26,\n",
       "          'botnet': 1,\n",
       "          'developer': 101,\n",
       "          'networking': 13,\n",
       "          'linux': 100,\n",
       "          'qa': 10,\n",
       "          'hardware': 13,\n",
       "          'social': 20,\n",
       "          'unix': 7,\n",
       "          'aws': 142,\n",
       "          'design': 81,\n",
       "          'algorithms': 31,\n",
       "          'django': 89,\n",
       "          'engineers': 183,\n",
       "          'hierarchy': 5,\n",
       "          'javascript': 348,\n",
       "          'java': 164,\n",
       "          'kibana': 2,\n",
       "          'redis': 36,\n",
       "          'spark': 37,\n",
       "          'docker': 89,\n",
       "          'statistical': 20,\n",
       "          'elasticsearch': 70,\n",
       "          'angularjs': 34,\n",
       "          'analysis': 120,\n",
       "          'c++': 58,\n",
       "          'git': 48,\n",
       "          'julia': 4,\n",
       "          'code': 90,\n",
       "          'api': 40,\n",
       "          'postgresql': 59,\n",
       "          'kafka': 26,\n",
       "          'research': 60,\n",
       "          'apache': 14,\n",
       "          'software': 265,\n",
       "          'app': 34,\n",
       "          'web': 216,\n",
       "          'metadata': 5,\n",
       "          'apps': 28,\n",
       "          'backend': 200,\n",
       "          'engineering': 370,\n",
       "          'android': 42,\n",
       "          'github': 16,\n",
       "          'ios': 39,\n",
       "          'windows': 11,\n",
       "          'analysts': 30,\n",
       "          'coding': 48,\n",
       "          'ai': 29,\n",
       "          'front-end': 46,\n",
       "          'programming': 122,\n",
       "          'tensorflow': 25,\n",
       "          'angular': 24,\n",
       "          'back-end': 27,\n",
       "          'caffe': 4,\n",
       "          'hadoop': 19,\n",
       "          'ui': 24,\n",
       "          'cloud': 66,\n",
       "          'bigtable': 3,\n",
       "          'stack': 214,\n",
       "          'scala': 32,\n",
       "          'bi': 6,\n",
       "          'ruby': 55,\n",
       "          'presto': 7,\n",
       "          'ml': 26,\n",
       "          'mysql': 27,\n",
       "          'frontend': 72,\n",
       "          'react': 158,\n",
       "          'nodejs': 14,\n",
       "          'ux': 25,\n",
       "          'modeling': 44,\n",
       "          'lean': 5,\n",
       "          'simulation': 8,\n",
       "          'classification': 7,\n",
       "          'full-stack': 46,\n",
       "          'bayesian': 4,\n",
       "          'collaborative': 19,\n",
       "          'node': 35,\n",
       "          'prototyping': 18,\n",
       "          'apis': 20,\n",
       "          'xml': 4,\n",
       "          'communication': 43,\n",
       "          'restful': 5,\n",
       "          'access': 46,\n",
       "          'leadership': 15,\n",
       "          'postgres': 55,\n",
       "          'mobile': 63,\n",
       "          'agile': 60,\n",
       "          'analyst': 11,\n",
       "          'it': 30,\n",
       "          'd3': 21,\n",
       "          'scikit-learn': 15,\n",
       "          'pandas': 30,\n",
       "          'numpy': 51,\n",
       "          'frameworks': 28,\n",
       "          'datasets': 12,\n",
       "          'keras': 7,\n",
       "          'english': 8,\n",
       "          'healthcare': 28,\n",
       "          'efficiency': 13,\n",
       "          'react.js': 9,\n",
       "          'analyze': 24,\n",
       "          'investing': 6,\n",
       "          'safe': 12,\n",
       "          'finance': 20,\n",
       "          'analyzing': 14,\n",
       "          'php': 26,\n",
       "          'node.js': 52,\n",
       "          'jquery': 8,\n",
       "          '.net': 8,\n",
       "          'server': 16,\n",
       "          'ms': 7,\n",
       "          'sql': 57,\n",
       "          'optimize': 19,\n",
       "          'analytical': 16,\n",
       "          'webpack': 10,\n",
       "          'nlp': 8,\n",
       "          'facebook': 7,\n",
       "          'bs': 10,\n",
       "          'banking': 8,\n",
       "          'redshift': 13,\n",
       "          'fintech': 14,\n",
       "          'linkedin': 5,\n",
       "          's3': 11,\n",
       "          'mobile-first': 3,\n",
       "          'database': 28,\n",
       "          'perl': 26,\n",
       "          'scripting': 20,\n",
       "          'manage': 29,\n",
       "          'clojure': 7,\n",
       "          'analyses': 12,\n",
       "          'models': 34,\n",
       "          'mongodb': 50,\n",
       "          'model': 26,\n",
       "          'self-directed': 5,\n",
       "          'js': 22,\n",
       "          'es6': 24,\n",
       "          'cap': 2,\n",
       "          'azure': 15,\n",
       "          'logic': 9,\n",
       "          'planning': 20,\n",
       "          'swift': 13,\n",
       "          'css': 15,\n",
       "          'html': 13,\n",
       "          'datastore': 1,\n",
       "          'bachelors': 3,\n",
       "          'robotics': 10,\n",
       "          'controls': 3,\n",
       "          'graphql': 14,\n",
       "          'net': 4,\n",
       "          'databases': 15,\n",
       "          'initiative': 5,\n",
       "          'tdd': 6,\n",
       "          'shell': 5,\n",
       "          'websites': 4,\n",
       "          'postgis': 6,\n",
       "          'hive': 30,\n",
       "          'website': 20,\n",
       "          'emr': 5,\n",
       "          'data-driven': 14,\n",
       "          'cryptocurrency': 4,\n",
       "          'imaging': 8,\n",
       "          'opencv': 1,\n",
       "          'statistics': 30,\n",
       "          'interpersonal': 6,\n",
       "          'kinesis': 9,\n",
       "          'sensors': 15,\n",
       "          'writing': 21,\n",
       "          'nginx': 8,\n",
       "          'sass': 7,\n",
       "          'dynamodb': 9,\n",
       "          'cms': 3,\n",
       "          'vue': 4,\n",
       "          'json': 8,\n",
       "          'less': 8,\n",
       "          'object-oriented': 2,\n",
       "          'principle': 3,\n",
       "          'collaborate': 18,\n",
       "          'visualization': 44,\n",
       "          'mentoring': 6,\n",
       "          'targeting': 2,\n",
       "          'analytic': 10,\n",
       "          'classifiers': 1,\n",
       "          'workflow': 10,\n",
       "          'acquisition': 4,\n",
       "          'saas': 21,\n",
       "          'solr': 4,\n",
       "          'algorithm': 8,\n",
       "          'qc': 2,\n",
       "          'bioinformatics': 8,\n",
       "          'phd': 34,\n",
       "          'prioritize': 7,\n",
       "          'bootstrap': 3,\n",
       "          'html5': 3,\n",
       "          'math': 24,\n",
       "          'biotech': 2,\n",
       "          'physics': 14,\n",
       "          'hpc': 1,\n",
       "          'cs': 7,\n",
       "          'oracle': 9,\n",
       "          'sharepoint': 1,\n",
       "          'gulp': 3,\n",
       "          'scrum': 3,\n",
       "          'desktop': 5,\n",
       "          'malware': 4,\n",
       "          'splunk': 4,\n",
       "          'algorithmic': 12,\n",
       "          'ar': 2,\n",
       "          'mathematical': 4,\n",
       "          'optimization': 24,\n",
       "          'measurement': 2,\n",
       "          'etl': 7,\n",
       "          'twitter': 3,\n",
       "          'regression': 7,\n",
       "          'ph.d.': 4,\n",
       "          'pytorch': 3,\n",
       "          'accessibility': 4,\n",
       "          'nosql': 5,\n",
       "          'dashboards': 1,\n",
       "          'tableau': 5,\n",
       "          'svg': 3,\n",
       "          'visualizing': 1,\n",
       "          'inference': 1,\n",
       "          'regulatory': 6,\n",
       "          'pharmaceutical': 1,\n",
       "          'os': 8,\n",
       "          'matlab': 36,\n",
       "          'segmentation': 1,\n",
       "          'sas': 5,\n",
       "          'sketch': 2,\n",
       "          'seo': 3,\n",
       "          'clarity': 2,\n",
       "          'gabi': 1,\n",
       "          'biotechnology': 2,\n",
       "          'scipy': 4,\n",
       "          'cross-browser': 1,\n",
       "          'animation': 1,\n",
       "          'couchdb': 1,\n",
       "          'shiny': 2,\n",
       "          'statistician': 2,\n",
       "          'unstructured': 5,\n",
       "          'petabyte': 1,\n",
       "          'batch': 3,\n",
       "          'scheduling': 2,\n",
       "          'excel': 3,\n",
       "          'macros': 1,\n",
       "          'vfx': 1,\n",
       "          'troubleshooting': 5,\n",
       "          'streaming': 2,\n",
       "          'self-motivated': 6,\n",
       "          'mapreduce': 2,\n",
       "          'lamp': 1,\n",
       "          'parquet': 2,\n",
       "          'clustering': 8,\n",
       "          'sampling': 1,\n",
       "          'mathematics': 24,\n",
       "          'econometric': 1,\n",
       "          'economics': 6,\n",
       "          'stata': 2,\n",
       "          'detail-oriented': 2,\n",
       "          'multi-task': 1,\n",
       "          'econometrics': 3,\n",
       "          'alteryx': 3,\n",
       "          'm.b.a.': 1,\n",
       "          'multitasking': 1,\n",
       "          'gis': 5,\n",
       "          'templates': 2,\n",
       "          'powerpoint': 3,\n",
       "          'arcgis': 4,\n",
       "          'esri': 4,\n",
       "          'quicksight': 1,\n",
       "          'circonus': 1,\n",
       "          'databricks': 1,\n",
       "          'mentor': 2,\n",
       "          'a/b': 1,\n",
       "          'graphs': 1,\n",
       "          'pig': 2,\n",
       "          'cognitive': 2,\n",
       "          'biophysics': 2,\n",
       "          'spicy': 1,\n",
       "          'cron': 2,\n",
       "          'storm': 1,\n",
       "          'fpga': 1,\n",
       "          'geodatabase': 2,\n",
       "          'geojson': 4,\n",
       "          'bigdata': 4,\n",
       "          'geokettle': 2,\n",
       "          'broadcast': 3,\n",
       "          'kettle': 2,\n",
       "          'ftp': 2,\n",
       "          'k-means': 2,\n",
       "          'informatica': 2,\n",
       "          'cartodb': 2,\n",
       "          'geoserver': 3,\n",
       "          'biochemistry': 1,\n",
       "          'big-data': 1,\n",
       "          'qlikview': 1,\n",
       "          'idl': 1,\n",
       "          'socrata': 1,\n",
       "          'svn': 1,\n",
       "          'openrefine': 1,\n",
       "          'rdbms/dba': 1}),\n",
       " 'javascript': Counter({'algorithms': 13,\n",
       "          'django': 32,\n",
       "          'engineers': 98,\n",
       "          'hierarchy': 5,\n",
       "          'javascript': 837,\n",
       "          'java': 104,\n",
       "          'python': 232,\n",
       "          'kibana': 2,\n",
       "          'redis': 24,\n",
       "          'spark': 14,\n",
       "          'docker': 31,\n",
       "          'ansible': 10,\n",
       "          'statistical': 4,\n",
       "          'elasticsearch': 44,\n",
       "          'linux': 44,\n",
       "          'angularjs': 30,\n",
       "          'analysis': 38,\n",
       "          'c++': 23,\n",
       "          'git': 34,\n",
       "          'julia': 2,\n",
       "          'code': 80,\n",
       "          'api': 27,\n",
       "          'postgresql': 34,\n",
       "          'kafka': 17,\n",
       "          'research': 24,\n",
       "          'apache': 5,\n",
       "          'graphql': 12,\n",
       "          'full-stack': 48,\n",
       "          'development': 84,\n",
       "          'saas': 15,\n",
       "          'mobile': 43,\n",
       "          'front-end': 41,\n",
       "          'efficiency': 5,\n",
       "          'react.js': 13,\n",
       "          'developer': 96,\n",
       "          'writing': 21,\n",
       "          'english': 8,\n",
       "          'react': 132,\n",
       "          'ruby': 46,\n",
       "          'analytics': 52,\n",
       "          'redshift': 4,\n",
       "          'qa': 10,\n",
       "          'cloud': 41,\n",
       "          'social': 13,\n",
       "          'engineering': 206,\n",
       "          'facebook': 10,\n",
       "          'collaborative': 15,\n",
       "          'nodejs': 9,\n",
       "          'backend': 118,\n",
       "          'ui': 24,\n",
       "          'ux': 18,\n",
       "          'frontend': 47,\n",
       "          'software': 168,\n",
       "          'safe': 5,\n",
       "          'phd': 8,\n",
       "          'manage': 15,\n",
       "          'node': 29,\n",
       "          'postgres': 28,\n",
       "          'stack': 150,\n",
       "          'web': 186,\n",
       "          'agile': 36,\n",
       "          'programming': 78,\n",
       "          'analyst': 4,\n",
       "          'aws': 68,\n",
       "          'it': 19,\n",
       "          'mysql': 19,\n",
       "          'pandas': 18,\n",
       "          'numpy': 30,\n",
       "          'frameworks': 25,\n",
       "          'ml': 10,\n",
       "          'tensorflow': 6,\n",
       "          'scikit-learn': 7,\n",
       "          'datasets': 2,\n",
       "          'keras': 4,\n",
       "          'analyze': 10,\n",
       "          'investing': 4,\n",
       "          'finance': 13,\n",
       "          'analyzing': 8,\n",
       "          'php': 27,\n",
       "          'node.js': 66,\n",
       "          'jquery': 24,\n",
       "          '.net': 11,\n",
       "          'server': 17,\n",
       "          'android': 26,\n",
       "          'ms': 2,\n",
       "          'sql': 33,\n",
       "          'ios': 25,\n",
       "          'app': 21,\n",
       "          'd3': 15,\n",
       "          'back-end': 21,\n",
       "          'css': 34,\n",
       "          'sass': 12,\n",
       "          'es6': 23,\n",
       "          'html5': 11,\n",
       "          'clojure': 7,\n",
       "          'streaming': 4,\n",
       "          'angular': 22,\n",
       "          'vue': 9,\n",
       "          'leadership': 10,\n",
       "          'collaborate': 14,\n",
       "          'js': 18,\n",
       "          'less': 4,\n",
       "          'html': 29,\n",
       "          'apis': 16,\n",
       "          'restful': 4,\n",
       "          'webpack': 12,\n",
       "          'design': 53,\n",
       "          'algorithm': 6,\n",
       "          'css3': 5,\n",
       "          'fintech': 6,\n",
       "          'ai': 8,\n",
       "          'azure': 3,\n",
       "          'controls': 2,\n",
       "          'crm': 4,\n",
       "          'prototyping': 8,\n",
       "          'net': 1,\n",
       "          'access': 14,\n",
       "          'optimization': 8,\n",
       "          'scheduling': 3,\n",
       "          'healthcare': 10,\n",
       "          'scripting': 5,\n",
       "          'nlp': 3,\n",
       "          'scala': 16,\n",
       "          'swift': 9,\n",
       "          'workflow': 8,\n",
       "          'github': 12,\n",
       "          'coding': 22,\n",
       "          'cron': 4,\n",
       "          'bootstrap': 7,\n",
       "          'lean': 7,\n",
       "          'tdd': 6,\n",
       "          'apps': 15,\n",
       "          'dynamodb': 5,\n",
       "          'cms': 4,\n",
       "          'windows': 4,\n",
       "          'data-driven': 8,\n",
       "          'mobile-first': 1,\n",
       "          'principle': 2,\n",
       "          'sketch': 4,\n",
       "          'planning': 8,\n",
       "          'nosql': 8,\n",
       "          'database': 15,\n",
       "          'hardware': 11,\n",
       "          'sensors': 4,\n",
       "          'website': 16,\n",
       "          'perl': 12,\n",
       "          'circonus': 2,\n",
       "          'adobe': 5,\n",
       "          'scrum': 6,\n",
       "          'qlikview': 2,\n",
       "          'mongodb': 40,\n",
       "          'targeting': 1,\n",
       "          'hadoop': 5,\n",
       "          'visualization': 22,\n",
       "          'models': 7,\n",
       "          'analytical': 6,\n",
       "          'mentor': 3,\n",
       "          'physics': 10,\n",
       "          'modeling': 6,\n",
       "          'optimize': 5,\n",
       "          'hpc': 1,\n",
       "          'bs': 2,\n",
       "          'linkedin': 5,\n",
       "          'analyses': 2,\n",
       "          'bioinformatics': 4,\n",
       "          'cs': 5,\n",
       "          'math': 12,\n",
       "          'gulp': 5,\n",
       "          'nginx': 5,\n",
       "          'model': 7,\n",
       "          'logic': 7,\n",
       "          'communication': 17,\n",
       "          'desktop': 4,\n",
       "          'malware': 2,\n",
       "          'oracle': 4,\n",
       "          'kinesis': 3,\n",
       "          'ar': 2,\n",
       "          'prioritize': 4,\n",
       "          'simulation': 2,\n",
       "          'analysts': 12,\n",
       "          'databases': 7,\n",
       "          'unix': 3,\n",
       "          'mathematical': 2,\n",
       "          'statistics': 4,\n",
       "          'websites': 4,\n",
       "          'seo': 2,\n",
       "          'hive': 8,\n",
       "          'algorithmic': 6,\n",
       "          'sitecore': 2,\n",
       "          'detail-oriented': 2,\n",
       "          'json': 8,\n",
       "          'metadata': 1,\n",
       "          'banking': 1,\n",
       "          'etl': 2,\n",
       "          'initiative': 5,\n",
       "          'mentoring': 5,\n",
       "          'accessibility': 3,\n",
       "          'photoshop': 4,\n",
       "          'bachelors': 1,\n",
       "          'robotics': 1,\n",
       "          'self-directed': 1,\n",
       "          'acquisition': 3,\n",
       "          'cross-browser': 2,\n",
       "          's3': 3,\n",
       "          'visualizing': 1,\n",
       "          'opengl': 1,\n",
       "          'dom': 1,\n",
       "          'os': 2,\n",
       "          'templates': 1,\n",
       "          'cryptocurrency': 4,\n",
       "          'self-motivated': 3,\n",
       "          'animation': 1,\n",
       "          'b.s.': 1,\n",
       "          'ph.d.': 1,\n",
       "          'alteryx': 4,\n",
       "          'solr': 1,\n",
       "          'emr': 1,\n",
       "          'scipy': 2,\n",
       "          'imaging': 1,\n",
       "          'networking': 3,\n",
       "          'couchdb': 2,\n",
       "          'bigtable': 2,\n",
       "          'tableau': 1,\n",
       "          'svg': 2,\n",
       "          'mapreduce': 1,\n",
       "          'pytorch': 1,\n",
       "          'lamp': 1,\n",
       "          'shell': 2,\n",
       "          'groovy': 3,\n",
       "          'xml': 2,\n",
       "          'erp': 1,\n",
       "          'excel': 1,\n",
       "          'object-oriented': 2,\n",
       "          'troubleshooting': 1,\n",
       "          'wireframes': 1,\n",
       "          'illustrator': 1,\n",
       "          'invision': 2,\n",
       "          'branding': 1,\n",
       "          'analytic': 2,\n",
       "          'cognitive': 2,\n",
       "          'gis': 1,\n",
       "          'geojson': 2,\n",
       "          'socrata': 1,\n",
       "          'bi': 1,\n",
       "          'geokettle': 1,\n",
       "          'broadcast': 1,\n",
       "          'svn': 1,\n",
       "          'matlab': 4,\n",
       "          'postgis': 1,\n",
       "          'kettle': 1,\n",
       "          'openrefine': 1,\n",
       "          'ftp': 1,\n",
       "          'rdbms/dba': 1,\n",
       "          'unstructured': 1,\n",
       "          'k-means': 1,\n",
       "          'informatica': 1,\n",
       "          'geoserver': 1}),\n",
       " 'java': Counter({'algorithms': 11,\n",
       "          'django': 7,\n",
       "          'engineers': 86,\n",
       "          'hierarchy': 2,\n",
       "          'javascript': 156,\n",
       "          'java': 406,\n",
       "          'python': 164,\n",
       "          'kibana': 2,\n",
       "          'redis': 18,\n",
       "          'spark': 19,\n",
       "          'docker': 35,\n",
       "          'ansible': 14,\n",
       "          'statistical': 8,\n",
       "          'elasticsearch': 24,\n",
       "          'linux': 42,\n",
       "          'angularjs': 14,\n",
       "          'analysis': 54,\n",
       "          'c++': 26,\n",
       "          'git': 32,\n",
       "          'julia': 2,\n",
       "          'code': 45,\n",
       "          'api': 25,\n",
       "          'postgresql': 21,\n",
       "          'kafka': 24,\n",
       "          'research': 20,\n",
       "          'apache': 8,\n",
       "          'full-stack': 9,\n",
       "          'development': 66,\n",
       "          'software': 127,\n",
       "          'web': 116,\n",
       "          'communication': 25,\n",
       "          'developer': 49,\n",
       "          'stack': 77,\n",
       "          'databases': 9,\n",
       "          'ui': 15,\n",
       "          'nosql': 8,\n",
       "          'react': 48,\n",
       "          'scala': 27,\n",
       "          'nodejs': 4,\n",
       "          'backend': 100,\n",
       "          'qa': 8,\n",
       "          'ux': 13,\n",
       "          'frontend': 32,\n",
       "          'modeling': 18,\n",
       "          'programming': 54,\n",
       "          'lean': 5,\n",
       "          'engineering': 148,\n",
       "          'simulation': 2,\n",
       "          'aws': 51,\n",
       "          'design': 46,\n",
       "          'mobile': 49,\n",
       "          'hadoop': 15,\n",
       "          'php': 21,\n",
       "          'ruby': 44,\n",
       "          'node.js': 32,\n",
       "          'jquery': 14,\n",
       "          'mysql': 14,\n",
       "          'postgres': 11,\n",
       "          '.net': 8,\n",
       "          'server': 19,\n",
       "          'android': 37,\n",
       "          'ms': 4,\n",
       "          'sql': 27,\n",
       "          'ios': 27,\n",
       "          'perl': 16,\n",
       "          'networking': 3,\n",
       "          'scripting': 11,\n",
       "          'unix': 3,\n",
       "          'manage': 10,\n",
       "          'clojure': 4,\n",
       "          'analytics': 48,\n",
       "          'batch': 6,\n",
       "          'back-end': 16,\n",
       "          'writing': 13,\n",
       "          'etl': 5,\n",
       "          'app': 19,\n",
       "          'css': 11,\n",
       "          'html': 9,\n",
       "          'frameworks': 7,\n",
       "          'd3': 1,\n",
       "          'sass': 4,\n",
       "          'es6': 7,\n",
       "          'html5': 4,\n",
       "          'streaming': 10,\n",
       "          'angular': 18,\n",
       "          'vue': 5,\n",
       "          'leadership': 10,\n",
       "          'ai': 10,\n",
       "          'apis': 10,\n",
       "          'nginx': 7,\n",
       "          'phd': 16,\n",
       "          'mathematical': 3,\n",
       "          'collaborate': 15,\n",
       "          'js': 8,\n",
       "          'less': 1,\n",
       "          'coding': 30,\n",
       "          'azure': 13,\n",
       "          'agile': 42,\n",
       "          'social': 12,\n",
       "          'logic': 7,\n",
       "          'ml': 5,\n",
       "          'cloud': 34,\n",
       "          'model': 10,\n",
       "          's3': 8,\n",
       "          'appengine': 1,\n",
       "          'datastore': 1,\n",
       "          'swift': 14,\n",
       "          'graphql': 4,\n",
       "          'node': 14,\n",
       "          'websites': 2,\n",
       "          'tdd': 5,\n",
       "          'front-end': 18,\n",
       "          'healthcare': 10,\n",
       "          'optimize': 12,\n",
       "          'object-oriented': 5,\n",
       "          'apps': 16,\n",
       "          'analysts': 10,\n",
       "          'access': 11,\n",
       "          'data-driven': 6,\n",
       "          'analyst': 5,\n",
       "          'acquisition': 4,\n",
       "          'mentoring': 2,\n",
       "          'banking': 5,\n",
       "          'optimization': 16,\n",
       "          'webpack': 14,\n",
       "          'crm': 3,\n",
       "          'personalization': 1,\n",
       "          'saas': 10,\n",
       "          'it': 12,\n",
       "          'circonus': 3,\n",
       "          'tensorflow': 3,\n",
       "          'keras': 2,\n",
       "          'fintech': 3,\n",
       "          'finance': 5,\n",
       "          'classifiers': 1,\n",
       "          'models': 12,\n",
       "          'math': 10,\n",
       "          'datasets': 5,\n",
       "          'database': 13,\n",
       "          'cs': 4,\n",
       "          'oracle': 5,\n",
       "          'bs': 8,\n",
       "          'react.js': 5,\n",
       "          'imaging': 7,\n",
       "          'desktop': 6,\n",
       "          'pandas': 6,\n",
       "          'numpy': 9,\n",
       "          'website': 8,\n",
       "          'physics': 4,\n",
       "          'gulp': 3,\n",
       "          'visualization': 16,\n",
       "          'scikit-learn': 4,\n",
       "          'postgis': 2,\n",
       "          'redshift': 3,\n",
       "          'mongodb': 26,\n",
       "          'interpersonal': 2,\n",
       "          'json': 10,\n",
       "          'dynamodb': 6,\n",
       "          'collaborative': 6,\n",
       "          'hive': 16,\n",
       "          'metadata': 1,\n",
       "          'initiative': 4,\n",
       "          'twitter': 2,\n",
       "          'english': 2,\n",
       "          'efficiency': 5,\n",
       "          'analytical': 10,\n",
       "          'bachelors': 1,\n",
       "          'robotics': 2,\n",
       "          'facebook': 3,\n",
       "          'lamp': 2,\n",
       "          'bootstrap': 1,\n",
       "          'planning': 7,\n",
       "          'dashboards': 1,\n",
       "          'windows': 4,\n",
       "          'algorithm': 3,\n",
       "          'regulatory': 3,\n",
       "          'cross-browser': 1,\n",
       "          'workflow': 4,\n",
       "          'visualizing': 1,\n",
       "          'opengl': 1,\n",
       "          'github': 4,\n",
       "          'net': 1,\n",
       "          'targeting': 2,\n",
       "          'dom': 1,\n",
       "          'linkedin': 1,\n",
       "          'sensors': 5,\n",
       "          'kinesis': 3,\n",
       "          'solr': 2,\n",
       "          'emr': 4,\n",
       "          'css3': 1,\n",
       "          'safe': 5,\n",
       "          'couchdb': 1,\n",
       "          'accessibility': 3,\n",
       "          'statistician': 2,\n",
       "          'prototyping': 8,\n",
       "          'scipy': 1,\n",
       "          'unstructured': 3,\n",
       "          'investing': 3,\n",
       "          'scheduling': 1,\n",
       "          'os': 2,\n",
       "          'scrum': 2,\n",
       "          'hardware': 3,\n",
       "          'self-motivated': 3,\n",
       "          'analyses': 6,\n",
       "          'mapreduce': 1,\n",
       "          'pytorch': 1,\n",
       "          'shell': 2,\n",
       "          'xml': 3,\n",
       "          'ph.d.': 3,\n",
       "          'controls': 1,\n",
       "          'statistics': 8,\n",
       "          'analyze': 10,\n",
       "          'mathematics': 10,\n",
       "          'sas': 3,\n",
       "          'prioritize': 1,\n",
       "          'self-directed': 2,\n",
       "          'groovy': 4,\n",
       "          'erp': 1,\n",
       "          'mentor': 3,\n",
       "          'excel': 3,\n",
       "          'gis': 3,\n",
       "          'templates': 3,\n",
       "          'powerpoint': 2,\n",
       "          'arcgis': 2,\n",
       "          'esri': 2,\n",
       "          'splunk': 1,\n",
       "          'quicksight': 1,\n",
       "          'presto': 2,\n",
       "          'databricks': 1,\n",
       "          'tableau': 2,\n",
       "          'matlab': 20,\n",
       "          'algorithmic': 4,\n",
       "          'troubleshooting': 2,\n",
       "          'cron': 2,\n",
       "          'classification': 2,\n",
       "          'bi': 2,\n",
       "          'pig': 1,\n",
       "          'clustering': 4,\n",
       "          'regression': 2,\n",
       "          'storm': 1,\n",
       "          'analyzing': 3,\n",
       "          'qlikview': 1,\n",
       "          'econometrics': 1,\n",
       "          'analytic': 4,\n",
       "          'cognitive': 2,\n",
       "          'bioinformatics': 2,\n",
       "          'measurement': 1,\n",
       "          'detail-oriented': 1,\n",
       "          'geojson': 2,\n",
       "          'socrata': 1,\n",
       "          'geokettle': 1,\n",
       "          'broadcast': 1,\n",
       "          'svn': 1,\n",
       "          'kettle': 1,\n",
       "          'openrefine': 1,\n",
       "          'ftp': 1,\n",
       "          'rdbms/dba': 1,\n",
       "          'k-means': 1,\n",
       "          'informatica': 1,\n",
       "          'geoserver': 1}),\n",
       " 'excel': Counter({'software': 13,\n",
       "          'python': 6,\n",
       "          'developer': 2,\n",
       "          'back-end': 1,\n",
       "          'writing': 4,\n",
       "          'excel': 29,\n",
       "          'finance': 5,\n",
       "          'macros': 1,\n",
       "          'code': 4,\n",
       "          'analysts': 10,\n",
       "          'development': 19,\n",
       "          'statistics': 6,\n",
       "          'models': 6,\n",
       "          'modeling': 16,\n",
       "          'efficiency': 5,\n",
       "          'databases': 6,\n",
       "          'statistical': 4,\n",
       "          'economics': 8,\n",
       "          'mathematics': 4,\n",
       "          'bachelors': 1,\n",
       "          'stata': 2,\n",
       "          'sas': 3,\n",
       "          'spss': 2,\n",
       "          'analysis': 30,\n",
       "          'planning': 10,\n",
       "          'database': 3,\n",
       "          'access': 12,\n",
       "          'multi-task': 3,\n",
       "          'research': 7,\n",
       "          'design': 13,\n",
       "          'engineers': 17,\n",
       "          'imaging': 9,\n",
       "          'safe': 11,\n",
       "          'measurement': 4,\n",
       "          'sensors': 9,\n",
       "          'ms': 10,\n",
       "          'bi': 2,\n",
       "          'analytics': 6,\n",
       "          'analyze': 20,\n",
       "          'it': 6,\n",
       "          'optimization': 4,\n",
       "          'optimize': 1,\n",
       "          'analytical': 8,\n",
       "          'communication': 19,\n",
       "          'crm': 2,\n",
       "          'engineering': 28,\n",
       "          'initiative': 4,\n",
       "          'analyst': 5,\n",
       "          'dashboards': 1,\n",
       "          'detail-oriented': 2,\n",
       "          'self-motivated': 1,\n",
       "          'leadership': 8,\n",
       "          'gis': 4,\n",
       "          'collaborate': 5,\n",
       "          'regulatory': 4,\n",
       "          'powerpoint': 11,\n",
       "          'model': 4,\n",
       "          'sampling': 2,\n",
       "          'windows': 5,\n",
       "          'groovy': 1,\n",
       "          'coding': 2,\n",
       "          'javascript': 3,\n",
       "          'java': 6,\n",
       "          'frameworks': 1,\n",
       "          'web': 8,\n",
       "          'azure': 3,\n",
       "          'jquery': 2,\n",
       "          'xml': 1,\n",
       "          'erp': 1,\n",
       "          'programming': 6,\n",
       "          'ui': 1,\n",
       "          'cloud': 3,\n",
       "          'scripting': 1,\n",
       "          'server': 3,\n",
       "          'oracle': 1,\n",
       "          'sql': 5,\n",
       "          'mentor': 1,\n",
       "          'object-oriented': 1,\n",
       "          'aws': 1,\n",
       "          'accessibility': 2,\n",
       "          'mobile': 2,\n",
       "          'templates': 2,\n",
       "          'analyses': 4,\n",
       "          'apps': 2,\n",
       "          'backend': 4,\n",
       "          'visualization': 6,\n",
       "          '.net': 2,\n",
       "          'workflow': 2,\n",
       "          'arcgis': 2,\n",
       "          'desktop': 3,\n",
       "          'collaborative': 4,\n",
       "          'esri': 2,\n",
       "          'website': 1,\n",
       "          'networking': 2,\n",
       "          'pharmaceutical': 2,\n",
       "          'less': 2,\n",
       "          'biotechnology': 2,\n",
       "          'manage': 7,\n",
       "          'hardware': 6,\n",
       "          'telecommunications': 1,\n",
       "          'interpersonal': 5,\n",
       "          'physics': 4,\n",
       "          'ph.d.': 3,\n",
       "          'matlab': 4,\n",
       "          'c++': 1,\n",
       "          'math': 6,\n",
       "          'banking': 2,\n",
       "          'cfa': 2,\n",
       "          'demography': 1,\n",
       "          'analytic': 2,\n",
       "          'social': 2,\n",
       "          'qlik': 1,\n",
       "          'tableau': 1,\n",
       "          'simulation': 1,\n",
       "          'data-driven': 1,\n",
       "          'facebook': 1,\n",
       "          'logic': 1,\n",
       "          'data-sets': 1,\n",
       "          'acquisition': 1,\n",
       "          'biotech': 1,\n",
       "          'lcms': 1,\n",
       "          'analyzing': 1,\n",
       "          'mentoring': 1,\n",
       "          'controls': 1})}"
      ]
     },
     "execution_count": 24,
=======
       "{'excel': Counter({'a/b': 3,\n",
       "          'access': 211,\n",
       "          'accessibility': 10,\n",
       "          'adobe': 17,\n",
       "          'agile': 39,\n",
       "          'ai': 1,\n",
       "          'analytics': 173,\n",
       "          'apache': 5,\n",
       "          'apis': 9,\n",
       "          'ar': 2,\n",
       "          'aws': 5,\n",
       "          'backend': 2,\n",
       "          'bi': 84,\n",
       "          'bootstrap': 1,\n",
       "          'bs': 24,\n",
       "          'c++': 8,\n",
       "          'cms': 4,\n",
       "          'coding': 33,\n",
       "          'crm': 23,\n",
       "          'cs': 3,\n",
       "          'css': 6,\n",
       "          'css3': 5,\n",
       "          'd3': 5,\n",
       "          'database': 125,\n",
       "          'developer': 18,\n",
       "          'english': 20,\n",
       "          'facebook': 12,\n",
       "          'frameworks': 8,\n",
       "          'graphs': 12,\n",
       "          'hardware': 25,\n",
       "          'html': 10,\n",
       "          'html5': 5,\n",
       "          'illustrator': 6,\n",
       "          'instagram': 4,\n",
       "          'java': 12,\n",
       "          'javascript': 21,\n",
       "          'jquery': 7,\n",
       "          'json': 3,\n",
       "          'leadership': 168,\n",
       "          'linkedin': 5,\n",
       "          'linux': 6,\n",
       "          'math': 52,\n",
       "          'mentoring': 18,\n",
       "          'mongodb': 1,\n",
       "          'mysql': 6,\n",
       "          'net': 12,\n",
       "          'oracle': 48,\n",
       "          'personalization': 6,\n",
       "          'photoshop': 6,\n",
       "          'php': 9,\n",
       "          'postgres': 1,\n",
       "          'postgresql': 5,\n",
       "          'powerpoint': 226,\n",
       "          'programming': 58,\n",
       "          'prototyping': 2,\n",
       "          'python': 45,\n",
       "          'qa': 19,\n",
       "          'react': 1,\n",
       "          'research': 217,\n",
       "          'robotics': 1,\n",
       "          'ruby': 4,\n",
       "          'saas': 5,\n",
       "          'scripting': 19,\n",
       "          'segmentation': 18,\n",
       "          'seo': 8,\n",
       "          'server': 34,\n",
       "          'sharepoint': 26,\n",
       "          'shell': 5,\n",
       "          'social': 56,\n",
       "          'software': 206,\n",
       "          'sql': 171,\n",
       "          'swift': 2,\n",
       "          'templates': 17,\n",
       "          'twitter': 12,\n",
       "          'ui': 5,\n",
       "          'unix': 5,\n",
       "          'visualization': 49,\n",
       "          'wireframes': 1,\n",
       "          'workflow': 24,\n",
       "          'xml': 5}),\n",
       " 'java': Counter({'access': 38,\n",
       "          'accessibility': 3,\n",
       "          'adobe': 1,\n",
       "          'agile': 53,\n",
       "          'ai': 16,\n",
       "          'analytics': 82,\n",
       "          'android': 45,\n",
       "          'angular': 17,\n",
       "          'angularjs': 7,\n",
       "          'ansible': 13,\n",
       "          'apache': 18,\n",
       "          'apis': 19,\n",
       "          'aws': 62,\n",
       "          'backend': 40,\n",
       "          'bi': 22,\n",
       "          'bootstrap': 5,\n",
       "          'bs': 20,\n",
       "          'c++': 63,\n",
       "          'coding': 32,\n",
       "          'crm': 7,\n",
       "          'cs': 8,\n",
       "          'css': 19,\n",
       "          'css3': 1,\n",
       "          'd3': 2,\n",
       "          'database': 49,\n",
       "          'developer': 52,\n",
       "          'django': 9,\n",
       "          'docker': 40,\n",
       "          'english': 2,\n",
       "          'facebook': 1,\n",
       "          'frameworks': 26,\n",
       "          'git': 24,\n",
       "          'graphql': 6,\n",
       "          'gulp': 3,\n",
       "          'hardware': 12,\n",
       "          'hierarchy': 2,\n",
       "          'html': 17,\n",
       "          'html5': 8,\n",
       "          'ios': 29,\n",
       "          'java': 310,\n",
       "          'javascript': 71,\n",
       "          'jquery': 19,\n",
       "          'js': 8,\n",
       "          'json': 16,\n",
       "          'lamp': 2,\n",
       "          'leadership': 35,\n",
       "          'linkedin': 1,\n",
       "          'linux': 41,\n",
       "          'math': 5,\n",
       "          'mentoring': 15,\n",
       "          'mongodb': 24,\n",
       "          'mysql': 30,\n",
       "          'net': 1,\n",
       "          'nginx': 7,\n",
       "          'node': 14,\n",
       "          'oracle': 27,\n",
       "          'personalization': 1,\n",
       "          'php': 29,\n",
       "          'postgres': 15,\n",
       "          'postgresql': 26,\n",
       "          'powerpoint': 2,\n",
       "          'programming': 111,\n",
       "          'prototyping': 13,\n",
       "          'python': 168,\n",
       "          'qa': 16,\n",
       "          'react': 45,\n",
       "          'redis': 22,\n",
       "          'research': 75,\n",
       "          'restful': 3,\n",
       "          'robotics': 2,\n",
       "          'ruby': 64,\n",
       "          'saas': 14,\n",
       "          'sass': 4,\n",
       "          'scala': 47,\n",
       "          'scripting': 41,\n",
       "          'segmentation': 2,\n",
       "          'seo': 1,\n",
       "          'server': 32,\n",
       "          'shell': 12,\n",
       "          'social': 27,\n",
       "          'software': 192,\n",
       "          'sql': 89,\n",
       "          'swift': 14,\n",
       "          'tdd': 7,\n",
       "          'templates': 6,\n",
       "          'twitter': 4,\n",
       "          'ui': 18,\n",
       "          'unix': 8,\n",
       "          'ux': 13,\n",
       "          'visualization': 23,\n",
       "          'vue': 5,\n",
       "          'webpack': 7,\n",
       "          'workflow': 10,\n",
       "          'xml': 14}),\n",
       " 'javascript': Counter({'a/b': 2,\n",
       "          'access': 25,\n",
       "          'accessibility': 5,\n",
       "          'adobe': 16,\n",
       "          'agile': 53,\n",
       "          'ai': 6,\n",
       "          'analytics': 52,\n",
       "          'android': 25,\n",
       "          'angular': 23,\n",
       "          'angularjs': 16,\n",
       "          'ansible': 10,\n",
       "          'apache': 7,\n",
       "          'apis': 29,\n",
       "          'ar': 2,\n",
       "          'aws': 70,\n",
       "          'backend': 50,\n",
       "          'bi': 29,\n",
       "          'bootstrap': 12,\n",
       "          'bs': 7,\n",
       "          'c++': 26,\n",
       "          'cms': 2,\n",
       "          'coding': 28,\n",
       "          'crm': 6,\n",
       "          'cs': 6,\n",
       "          'css': 56,\n",
       "          'css3': 11,\n",
       "          'd3': 21,\n",
       "          'database': 39,\n",
       "          'developer': 86,\n",
       "          'django': 33,\n",
       "          'docker': 36,\n",
       "          'english': 13,\n",
       "          'facebook': 8,\n",
       "          'frameworks': 37,\n",
       "          'git': 26,\n",
       "          'graphql': 12,\n",
       "          'gulp': 6,\n",
       "          'hardware': 13,\n",
       "          'hierarchy': 5,\n",
       "          'html': 55,\n",
       "          'html5': 25,\n",
       "          'illustrator': 7,\n",
       "          'ios': 23,\n",
       "          'java': 71,\n",
       "          'javascript': 322,\n",
       "          'jquery': 32,\n",
       "          'js': 18,\n",
       "          'json': 11,\n",
       "          'lamp': 1,\n",
       "          'leadership': 30,\n",
       "          'linkedin': 5,\n",
       "          'linux': 35,\n",
       "          'math': 13,\n",
       "          'mentoring': 9,\n",
       "          'mongodb': 25,\n",
       "          'mysql': 30,\n",
       "          'nginx': 5,\n",
       "          'node': 24,\n",
       "          'oracle': 11,\n",
       "          'personalization': 4,\n",
       "          'photoshop': 8,\n",
       "          'php': 37,\n",
       "          'postgres': 23,\n",
       "          'postgresql': 38,\n",
       "          'powerpoint': 4,\n",
       "          'programming': 59,\n",
       "          'prototyping': 5,\n",
       "          'python': 142,\n",
       "          'qa': 16,\n",
       "          'react': 124,\n",
       "          'redis': 25,\n",
       "          'research': 38,\n",
       "          'restful': 6,\n",
       "          'robotics': 1,\n",
       "          'ruby': 53,\n",
       "          'saas': 19,\n",
       "          'sass': 12,\n",
       "          'scala': 20,\n",
       "          'scripting': 17,\n",
       "          'segmentation': 5,\n",
       "          'seo': 7,\n",
       "          'server': 30,\n",
       "          'sharepoint': 2,\n",
       "          'shell': 10,\n",
       "          'sitecore': 3,\n",
       "          'sketch': 2,\n",
       "          'social': 14,\n",
       "          'software': 177,\n",
       "          'sql': 75,\n",
       "          'svg': 2,\n",
       "          'swift': 9,\n",
       "          'tdd': 6,\n",
       "          'templates': 3,\n",
       "          'twitter': 3,\n",
       "          'ui': 26,\n",
       "          'unix': 5,\n",
       "          'ux': 17,\n",
       "          'visualization': 33,\n",
       "          'vue': 9,\n",
       "          'webpack': 6,\n",
       "          'wireframes': 1,\n",
       "          'workflow': 15,\n",
       "          'xml': 12}),\n",
       " 'python': Counter({'a/b': 4,\n",
       "          'access': 88,\n",
       "          'accessibility': 6,\n",
       "          'adobe': 5,\n",
       "          'agile': 69,\n",
       "          'ai': 37,\n",
       "          'analytics': 160,\n",
       "          'android': 47,\n",
       "          'angular': 24,\n",
       "          'angularjs': 15,\n",
       "          'ansible': 24,\n",
       "          'apache': 30,\n",
       "          'apis': 34,\n",
       "          'ar': 2,\n",
       "          'aws': 164,\n",
       "          'backend': 87,\n",
       "          'bi': 42,\n",
       "          'bootstrap': 5,\n",
       "          'bs': 24,\n",
       "          'c++': 102,\n",
       "          'cms': 3,\n",
       "          'coding': 58,\n",
       "          'crm': 3,\n",
       "          'cs': 10,\n",
       "          'css': 24,\n",
       "          'css3': 5,\n",
       "          'd3': 31,\n",
       "          'database': 92,\n",
       "          'developer': 115,\n",
       "          'django': 86,\n",
       "          'docker': 98,\n",
       "          'english': 17,\n",
       "          'facebook': 7,\n",
       "          'frameworks': 52,\n",
       "          'git': 40,\n",
       "          'graphql': 14,\n",
       "          'graphs': 1,\n",
       "          'gulp': 3,\n",
       "          'hardware': 29,\n",
       "          'hierarchy': 5,\n",
       "          'html': 26,\n",
       "          'html5': 11,\n",
       "          'illustrator': 5,\n",
       "          'ios': 37,\n",
       "          'java': 168,\n",
       "          'javascript': 142,\n",
       "          'jquery': 21,\n",
       "          'js': 22,\n",
       "          'json': 22,\n",
       "          'lamp': 1,\n",
       "          'leadership': 91,\n",
       "          'linkedin': 4,\n",
       "          'linux': 74,\n",
       "          'math': 37,\n",
       "          'mentoring': 17,\n",
       "          'mongodb': 35,\n",
       "          'mysql': 43,\n",
       "          'net': 3,\n",
       "          'nginx': 8,\n",
       "          'node': 29,\n",
       "          'oracle': 45,\n",
       "          'personalization': 6,\n",
       "          'photoshop': 5,\n",
       "          'php': 46,\n",
       "          'postgres': 52,\n",
       "          'postgresql': 71,\n",
       "          'powerpoint': 13,\n",
       "          'programming': 192,\n",
       "          'prototyping': 24,\n",
       "          'python': 690,\n",
       "          'qa': 14,\n",
       "          'react': 152,\n",
       "          'redis': 41,\n",
       "          'research': 180,\n",
       "          'restful': 7,\n",
       "          'robotics': 7,\n",
       "          'ruby': 83,\n",
       "          'saas': 30,\n",
       "          'sass': 7,\n",
       "          'scala': 59,\n",
       "          'scripting': 58,\n",
       "          'segmentation': 9,\n",
       "          'seo': 11,\n",
       "          'server': 37,\n",
       "          'sharepoint': 5,\n",
       "          'shell': 23,\n",
       "          'sketch': 1,\n",
       "          'social': 59,\n",
       "          'software': 366,\n",
       "          'sql': 200,\n",
       "          'svg': 3,\n",
       "          'swift': 14,\n",
       "          'tdd': 7,\n",
       "          'templates': 4,\n",
       "          'twitter': 8,\n",
       "          'ui': 25,\n",
       "          'unix': 19,\n",
       "          'ux': 22,\n",
       "          'visualization': 85,\n",
       "          'vue': 4,\n",
       "          'webpack': 4,\n",
       "          'wireframes': 1,\n",
       "          'workflow': 20,\n",
       "          'xml': 19}),\n",
       " 'sql': Counter({'a/b': 6,\n",
       "          'access': 137,\n",
       "          'accessibility': 7,\n",
       "          'adobe': 18,\n",
       "          'agile': 94,\n",
       "          'ai': 9,\n",
       "          'analytics': 213,\n",
       "          'android': 15,\n",
       "          'angular': 12,\n",
       "          'angularjs': 4,\n",
       "          'ansible': 2,\n",
       "          'apache': 20,\n",
       "          'apis': 27,\n",
       "          'ar': 1,\n",
       "          'aws': 49,\n",
       "          'backend': 19,\n",
       "          'bi': 122,\n",
       "          'bootstrap': 5,\n",
       "          'bs': 26,\n",
       "          'c++': 23,\n",
       "          'cms': 5,\n",
       "          'coding': 50,\n",
       "          'crm': 11,\n",
       "          'css': 25,\n",
       "          'css3': 5,\n",
       "          'd3': 16,\n",
       "          'database': 160,\n",
       "          'developer': 73,\n",
       "          'django': 11,\n",
       "          'docker': 25,\n",
       "          'english': 15,\n",
       "          'facebook': 5,\n",
       "          'frameworks': 31,\n",
       "          'git': 19,\n",
       "          'graphql': 4,\n",
       "          'graphs': 2,\n",
       "          'hardware': 20,\n",
       "          'html': 32,\n",
       "          'html5': 6,\n",
       "          'illustrator': 6,\n",
       "          'instagram': 1,\n",
       "          'ios': 14,\n",
       "          'java': 89,\n",
       "          'javascript': 75,\n",
       "          'jquery': 24,\n",
       "          'js': 9,\n",
       "          'json': 22,\n",
       "          'lamp': 2,\n",
       "          'leadership': 122,\n",
       "          'linkedin': 3,\n",
       "          'linux': 39,\n",
       "          'math': 34,\n",
       "          'mentoring': 14,\n",
       "          'mongodb': 13,\n",
       "          'mysql': 27,\n",
       "          'net': 5,\n",
       "          'node': 5,\n",
       "          'oracle': 98,\n",
       "          'personalization': 11,\n",
       "          'photoshop': 6,\n",
       "          'php': 34,\n",
       "          'postgres': 11,\n",
       "          'postgresql': 23,\n",
       "          'powerpoint': 61,\n",
       "          'programming': 140,\n",
       "          'prototyping': 17,\n",
       "          'python': 200,\n",
       "          'qa': 34,\n",
       "          'react': 32,\n",
       "          'redis': 12,\n",
       "          'research': 132,\n",
       "          'restful': 8,\n",
       "          'robotics': 1,\n",
       "          'ruby': 34,\n",
       "          'saas': 14,\n",
       "          'sass': 3,\n",
       "          'scala': 19,\n",
       "          'scripting': 46,\n",
       "          'segmentation': 18,\n",
       "          'seo': 12,\n",
       "          'server': 111,\n",
       "          'sharepoint': 16,\n",
       "          'shell': 19,\n",
       "          'social': 46,\n",
       "          'software': 283,\n",
       "          'sql': 511,\n",
       "          'tdd': 5,\n",
       "          'templates': 8,\n",
       "          'twitter': 7,\n",
       "          'ui': 19,\n",
       "          'unix': 15,\n",
       "          'ux': 4,\n",
       "          'visualization': 90,\n",
       "          'vue': 2,\n",
       "          'webpack': 3,\n",
       "          'wireframes': 3,\n",
       "          'workflow': 35,\n",
       "          'xml': 30}),\n",
       " 'vba': Counter({'access': 18,\n",
       "          'accessibility': 2,\n",
       "          'agile': 4,\n",
       "          'analytics': 10,\n",
       "          'apache': 3,\n",
       "          'apis': 1,\n",
       "          'bi': 3,\n",
       "          'bs': 1,\n",
       "          'c++': 7,\n",
       "          'coding': 7,\n",
       "          'css': 1,\n",
       "          'd3': 3,\n",
       "          'database': 13,\n",
       "          'developer': 4,\n",
       "          'frameworks': 1,\n",
       "          'html': 2,\n",
       "          'java': 6,\n",
       "          'javascript': 2,\n",
       "          'leadership': 9,\n",
       "          'linux': 1,\n",
       "          'math': 5,\n",
       "          'mentoring': 3,\n",
       "          'mongodb': 1,\n",
       "          'mysql': 1,\n",
       "          'net': 1,\n",
       "          'oracle': 2,\n",
       "          'php': 6,\n",
       "          'powerpoint': 13,\n",
       "          'programming': 16,\n",
       "          'python': 20,\n",
       "          'research': 17,\n",
       "          'ruby': 3,\n",
       "          'scripting': 5,\n",
       "          'seo': 3,\n",
       "          'server': 3,\n",
       "          'sharepoint': 2,\n",
       "          'software': 20,\n",
       "          'sql': 22,\n",
       "          'templates': 2,\n",
       "          'unix': 1,\n",
       "          'visualization': 5,\n",
       "          'xml': 4})}"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_matches"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>excel</th>\n",
       "      <th>java</th>\n",
       "      <th>javascript</th>\n",
       "      <th>python</th>\n",
       "      <th>sql</th>\n",
       "      <th>vba</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>a/b</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>access</th>\n",
       "      <td>211</td>\n",
       "      <td>38</td>\n",
       "      <td>25</td>\n",
       "      <td>88</td>\n",
       "      <td>137</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>accessibility</th>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adobe</th>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>5</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>agile</th>\n",
       "      <td>39</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>69</td>\n",
       "      <td>94</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               excel  java  javascript  python  sql  vba\n",
       "a/b                3     0           2       4    6    0\n",
       "access           211    38          25      88  137   18\n",
       "accessibility     10     3           5       6    7    2\n",
       "adobe             17     1          16       5   18    0\n",
       "agile             39    53          53      69   94    4"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_match_df=pd.DataFrame(all_matches).fillna(0).astype(int)\n",
    "all_match_df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x198211bf048>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "all_match_df.sum().plot(kind=\"bar\",figsize=(10,10));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_match_df['sum']=all_match_df.sum(axis=1).astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x19821b61a20>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "all_match_df.sort_values(\"sum\", axis=0, ascending=False).head(20).plot(kind='bar',figsize=(14,10));"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>excel</th>\n",
       "      <th>java</th>\n",
       "      <th>javascript</th>\n",
       "      <th>python</th>\n",
       "      <th>sql</th>\n",
       "      <th>vba</th>\n",
       "      <th>sum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>a/b</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>access</th>\n",
       "      <td>211</td>\n",
       "      <td>38</td>\n",
       "      <td>25</td>\n",
       "      <td>88</td>\n",
       "      <td>137</td>\n",
       "      <td>18</td>\n",
       "      <td>517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>accessibility</th>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>adobe</th>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>5</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>agile</th>\n",
       "      <td>39</td>\n",
       "      <td>53</td>\n",
       "      <td>53</td>\n",
       "      <td>69</td>\n",
       "      <td>94</td>\n",
       "      <td>4</td>\n",
       "      <td>312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ai</th>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>6</td>\n",
       "      <td>37</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>analytics</th>\n",
       "      <td>173</td>\n",
       "      <td>82</td>\n",
       "      <td>52</td>\n",
       "      <td>160</td>\n",
       "      <td>213</td>\n",
       "      <td>10</td>\n",
       "      <td>690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>android</th>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>25</td>\n",
       "      <td>47</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>angular</th>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>24</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>angularjs</th>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>16</td>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               excel  java  javascript  python  sql  vba  sum\n",
       "a/b                3     0           2       4    6    0   15\n",
       "access           211    38          25      88  137   18  517\n",
       "accessibility     10     3           5       6    7    2   33\n",
       "adobe             17     1          16       5   18    0   57\n",
       "agile             39    53          53      69   94    4  312\n",
       "ai                 1    16           6      37    9    0   69\n",
       "analytics        173    82          52     160  213   10  690\n",
       "android            0    45          25      47   15    0  132\n",
       "angular            0    17          23      24   12    0   76\n",
       "angularjs          0     7          16      15    4    0   42"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_match_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# colors = list(\"rgbcmyk\")\n",
    "# fig1, ax1 = plt.subplots()\n",
    "# fig1.set_size_inches(18,10)\n",
    "\n",
    "# for data_dict in all_matches.values():\n",
    "# x = data_dict.keys()\n",
    "# y = data_dict.values()\n",
    "# plt.bar(x,y,color=colors.pop())\n",
    "\n",
    "# plt.legend(all_matches.keys())\n",
    "# plt.xticks([])\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# for skill, c in all_matches.items():\n",
    "# most_common = c.most_common(20)\n",
    "# print(skill, \"SUMMARY:\")\n",
    "# print('~~~~~~~~~~~~~~~~~~')\n",
    "# for item, freq in most_common:\n",
    "#     print(item, \"+\" * (freq//10))\n",
    "# print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# for skill, c in all_matches.items():\n",
    "# most_common = c.most_common(50)\n",
    "# print(skill, \"SUMMARY:\")\n",
    "# print('~~~~~~~~~~~~~~~~~~')\n",
    "# for item, freq in most_common:\n",
    "#     print(item, (freq//10))\n",
    "# print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "def tally_skill_mentions_in_job(t, skill_phrase_wl):\n",
    "    \n",
    "    skill_mentions_in_job = defaultdict(int)\n",
    "    # tokenize the text of the description, without spans\n",
    "    tokenizer = RegexpTokenizer(r'[a-zA-Z0-9#+-]+')\n",
    "    tokens = tokenizer.tokenize(t)\n",
    "    # create a dictionary of the words in the job description\n",
    "    word_index = defaultdict(list)\n",
    "    for i, k in enumerate(tokens):\n",
    "        word_index[k].append(i)\n",
    "    \n",
    "    # search the word_index dictionary to find the fist word of each skill_phrase\n",
    "    for skill_phrase in skill_phrase_wl:\n",
    "        if word_index.get(skill_phrase[0]):\n",
    "            for occurence in word_index.get(skill_phrase[0]):\n",
    "                # Check to see if the whole phrase matches\n",
    "                if len(tokens) > (occurence + len(skill_phrase)):\n",
    "                    if all((skill_phrase[j] == tokens[j+occurence]) for j in range(len(skill_phrase))):\n",
    "                        skill_mentions_in_job[tuple(skill_phrase)] += 1\n",
    "    return skill_mentions_in_job        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|████████████████████████████████████████████████████████████████████████████| 4292/4292 [00:01<00:00, 2177.82it/s]\n"
     ]
    }
   ],
   "source": [
    "tallied_skill_mentions = []\n",
    "skill_dict = {tuple(skill_phrase): 0 for skill_phrase in skills['WL'].values}\n",
    "for t in tqdm(all_jobs['job_summary']):\n",
    "    if type(t) == str:\n",
    "        tallied_skill_mentions.append(tally_skill_mentions_in_job(t, skill_dict))\n",
    "    else:\n",
    "        tallied_skill_mentions.append(defaultdict(int))\n",
    "df = pd.DataFrame(tallied_skill_mentions, index=all_jobs.index).fillna(0).astype(int)\n",
    "skills_mentioned = df.columns.values\n",
    "skill_phrases_mentioned = [' '.join(c) for c in df.columns.values]\n",
    "df.columns = skill_phrases_mentioned"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "my_skill_list = [' '.join(wl) for wl in skills['WL'][skills['I Have It']]]\n",
    "masked = df[my_skill_list]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Access'"
      ]
     },
     "execution_count": 29,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Here is a list comprehension of skill phrases mentioned more than twice\n",
    "[skill_phrase for skill_phrase, usage in df.sum(axis = 0).items() if usage > 2][5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Writes out the skills used more than twice to a csv file\n",
    "with open('skill_phrases_out.csv', 'w', newline='') as csvfile:\n",
    "    csv_writer = csv.writer(csvfile)\n",
    "    for skill_phrase, usage in df.sum(axis = 0).items():\n",
    "        if (usage > 2):\n",
    "            csv_writer.writerow([skill_phrase])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_jobs['Total Mentions of Skills Required'] = df.sum(axis = 1)\n",
    "all_jobs['Total Mentions of Skills I Have'] = masked.sum(axis = 1)\n",
    "all_jobs['Skills Required'] = df.gt(0).sum(axis=1)\n",
    "all_jobs['Skills I Have'] = masked.gt(0).sum(axis=1)\n",
    "for skill in ['Total Mentions of Skills Required', 'Total Mentions of Skills I Have', 'Skills Required', 'Skills I Have']:\n",
    "    all_jobs[skill] = all_jobs[skill].fillna(0).astype(int)\n",
    "\n",
    "all_jobs['Percentage of Skills'] = masked.astype(bool).sum(axis=1) / df.astype(bool).sum(axis=1)\n",
    "all_jobs['Percentage of Mentions'] = masked.sum(axis = 1) / df.sum(axis = 1)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 25,
=======
   "execution_count": 32,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
<<<<<<< HEAD
      "image/png": "\n",
=======
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>company</th>\n",
       "      <th>location</th>\n",
       "      <th>jobtitle</th>\n",
       "      <th>job_summary</th>\n",
       "      <th>type</th>\n",
       "      <th>Total Mentions of Skills Required</th>\n",
       "      <th>Total Mentions of Skills I Have</th>\n",
       "      <th>Skills Required</th>\n",
       "      <th>Skills I Have</th>\n",
       "      <th>Percentage of Skills</th>\n",
       "      <th>Percentage of Mentions</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>jrj_c2d1b0769a534b4d645d4a27f091ebcc.html</th>\n",
       "      <td>Spectrum</td>\n",
       "      <td>Englewood, CO</td>\n",
       "      <td>Principal Data Engineer</td>\n",
       "      <td>Company Overview:\\nCharter Communications is A...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47</td>\n",
       "      <td>11</td>\n",
       "      <td>26</td>\n",
       "      <td>8</td>\n",
       "      <td>0.307692</td>\n",
       "      <td>0.234043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_anaBoulder_2c749d549b16ad168246a37d6cbfe44d.html</th>\n",
       "      <td>Staples</td>\n",
       "      <td>Westminster, CO 80021</td>\n",
       "      <td>Senior Analyst Pricing</td>\n",
       "      <td>Description\\nIt's an exciting time to join the...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe8166832.html</th>\n",
       "      <td>Ball Aerospace</td>\n",
       "      <td>Boulder, CO</td>\n",
       "      <td>Senior Embedded Software Engineer (662639)</td>\n",
       "      <td>Who We Are:\\n\\n\\nBall Aerospace leads the way ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>21</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>8</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.809524</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html</th>\n",
       "      <td>Community College of Aurora</td>\n",
       "      <td>Aurora, CO</td>\n",
       "      <td>Data Analyst</td>\n",
       "      <td>The Data Analyst is a 3/4 time (.75 FTE) fully...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13</td>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.923077</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>jrj_fa00778dd8f6bfe3a8d505b41092fa49.html</th>\n",
       "      <td>Community College of Aurora</td>\n",
       "      <td>Aurora, CO</td>\n",
       "      <td>Data Analyst</td>\n",
       "      <td>The Data Analyst is a 3/4 time (.75 FTE) fully...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>13</td>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>0.888889</td>\n",
       "      <td>0.923077</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
      "text/plain": [
       "                                                                        company  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                              Spectrum   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...                      Staples   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...               Ball Aerospace   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html  Community College of Aurora   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html           Community College of Aurora   \n",
       "\n",
       "                                                                 location  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                   Englewood, CO   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...  Westminster, CO 80021   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...            Boulder, CO   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html             Aurora, CO   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html                      Aurora, CO   \n",
       "\n",
       "                                                                                      jobtitle  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                              Principal Data Engineer   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...                      Senior Analyst Pricing   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...  Senior Embedded Software Engineer (662639)   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html                                Data Analyst   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html                                         Data Analyst   \n",
       "\n",
       "                                                                                          job_summary  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html           Company Overview:\\nCharter Communications is A...   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...  Description\\nIt's an exciting time to join the...   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...  Who We Are:\\n\\n\\nBall Aerospace leads the way ...   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html  The Data Analyst is a 3/4 time (.75 FTE) fully...   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html           The Data Analyst is a 3/4 time (.75 FTE) fully...   \n",
       "\n",
       "                                                   type  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html           NaN   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...  NaN   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...  NaN   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html  NaN   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html           NaN   \n",
       "\n",
       "                                                    Total Mentions of Skills Required  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                                          47   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...                                 10   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...                                 21   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html                                 13   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html                                          13   \n",
       "\n",
       "                                                    Total Mentions of Skills I Have  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                                        11   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...                                9   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...                               17   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html                               12   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html                                        12   \n",
       "\n",
       "                                                    Skills Required  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                        26   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...                9   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...               12   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html                9   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html                         9   \n",
       "\n",
       "                                                    Skills I Have  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                       8   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...              8   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...              8   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html              8   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html                       8   \n",
       "\n",
       "                                                    Percentage of Skills  \\\n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                       0.307692   \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...              0.888889   \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...              0.666667   \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html              0.888889   \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html                       0.888889   \n",
       "\n",
       "                                                    Percentage of Mentions  \n",
       "jrj_c2d1b0769a534b4d645d4a27f091ebcc.html                         0.234043  \n",
       "data_anaBoulder_2c749d549b16ad168246a37d6cbfe44...                0.900000  \n",
       "data_scienceBoulder_82c5e27e77990fa2d4a3bc2fe81...                0.809524  \n",
       "data_analyst_fa00778dd8f6bfe3a8d505b41092fa49.html                0.923077  \n",
       "jrj_fa00778dd8f6bfe3a8d505b41092fa49.html                         0.923077  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_jobs = all_jobs.sort_values('Skills I Have',ascending=False).head(5)\n",
    "top_jobs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "from IPython.core.display import HTML\n",
    "\n",
    "def highlight_phrases_from_list2(t, skills):\n",
    "\n",
    "    # tokenize the text of the description, with spans\n",
    "    tokenizer = RegexpTokenizer(r'[a-zA-Z0-9#+-]+')\n",
    "    span_generator = tokenizer.span_tokenize(t)\n",
    "    spans = [span for span in span_generator]\n",
    "    tokens = [t[span[0]:span[1]] for span in spans]\n",
    "    \n",
    "#     # create a dictionary of the words, with spans as the values\n",
    "#     # and another dictionary with the same keys, with the word indexes as the values\n",
    "    char_span = defaultdict(list)\n",
    "    word_index = defaultdict(list)\n",
    "    for i, (k, span) in enumerate(zip(tokens, spans)):\n",
    "        char_span[k].append(span)\n",
    "        word_index[k].append(i)\n",
    "    # is this useful?\n",
    "#     df = pd.DataFrame({'Character Index Spans': pd.Series(char_span), 'Word Indexes': pd.Series(word_index)})\n",
    "\n",
    "    highlight_spans = []   \n",
    "    for skill_index, skill_phrase in skills['WL'].items():\n",
    "        if word_index.get(skill_phrase[0]):\n",
    "            for i, occurence in enumerate(word_index.get(skill_phrase[0])):\n",
    "                if len(tokens) > occurence + len(skill_phrase):\n",
    "                    if all((skill_phrase[j] == tokens[j+occurence]) for j in range(len(skill_phrase))):\n",
    "                        if skills['I Have It'][skill_index]:\n",
    "                            c = \"lime\"\n",
    "                        else:\n",
    "                            c = \"red\"\n",
    "                        highlight_span = (spans[occurence][0], \n",
    "                                          spans[occurence + len(skill_phrase) - 1][1],\n",
    "                                         c)\n",
    "                        highlight_spans.append (highlight_span)\n",
    "\n",
    "# # look up the words in our skill list in the dictionary.  List the findings as spans to be highlighted\n",
    "#     for skill in single_word_skills:\n",
    "#         highlight_spans += char_span[skill]\n",
    "\n",
    "    # Sort the spans to be highlighted\n",
    "    highlight_spans.sort()\n",
    "\n",
    "    # Insert html tags to highlight the keywords\n",
    "#     html_start_tag = '<font color=\"red\">'\n",
    "    html_end_tag = '</font>'\n",
    "    highlighted = ''\n",
    "    cursor = 0\n",
    "    for span in highlight_spans:\n",
    "        if (span[0] > cursor): # go forwards only, not backwards \n",
    "            if (cursor>0):\n",
    "                highlighted += html_end_tag\n",
    "            html_start_tag = '<font color=\"' + span[2] + '\">'\n",
    "            highlighted += t[cursor:span[0]] + \\\n",
    "                            html_start_tag + \\\n",
    "                            t[span[0]:span[1]]\n",
    "        elif (span[1] > cursor):\n",
    "            highlighted += t[cursor:span[1]]\n",
    "        cursor = span[1]\n",
    "    highlighted += html_end_tag + t[cursor:]\n",
    "    display(HTML(highlighted))"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 26,
=======
   "execution_count": 34,
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "Company Overview:\n",
       "Charter Communications is Americaâs fastest growing TV, internet and voice company. Weâre committed to integrating the highest quality service with superior entertainment and communications products. Charter is at the intersection of technology and entertainment, facilitating essential communications that connect 24 million residential and business customers in 41 states. Our commitment to serving customers and exceeding their expectations is the bedrock of Charterâs business strategy and itâs the philosophy that guides our 90,000 employees.\n",
       "\n",
       "The Advanced Engineering department resides in the Charter Technology Engineering Center (CTEC) facilities in Englewood, CO and oversees the design and architecture of Charterâs multi-billion dollar network infrastructure. We investigate, select, develop, and integrate technologies and solutions that meet the needs of the company for short, medium and long term initiatives. This includes the delivery of the technology plan and future architecture for Voice, Video, Data, Optical, Commercial, Cloud, CPE, Network and <font color=\"lime\">Access</font>.\n",
       "\n",
       "JOB SUMMARY:\n",
       "Advanced Analytics has implemented and is operating a new advanced Big Data <font color=\"red\">analytics</font> platform that has enabled business-impacting self-service <font color=\"red\">analytics</font>, decision engineering support, machine learning, modeling, forecasting, and optimization. It is anticipated that by the end of 2018, there will be 2.5+ petabytes (PB) of complex <font color=\"red\">analytics</font> data sets supporting Charterâs Advanced Engineering organization. This position is responsible to create and maintain scalable, reliable, consistent and repeatable systems that support data operations and data engineering for Advanced Analytics by receiving, processing, and monitoring raw data at scale through scripts, <font color=\"lime\">coding</font>, web scraping, <font color=\"lime\">APIs</font>, <font color=\"red\">SQL</font> queries, etc. Deliverables include profiles of data that measure quality, integrity, accuracy, and completeness of workflows. Success in the role requires managing the data lifecycle at scale of multiple data sources and increasing the speed to delivery by implementing automated workload and data <font color=\"red\">workflow</font> solutions.\n",
       "\n",
       "MAJOR DUTIES AND RESPONSIBILITIES:\n",
       "Manage and operate key data systems to ensure that all data feeds are processed in a timely manner and result in high quality data.Identify and resolve issues within the data operations feeds and processing.Profile data to measure quality, integrity, accuracy, and completeness of the workflows.Develop and implement tools, scripts, queries, and applications for ETL/ELT and data operations.Use a wide variety of open source technologies, platforms, tools, applications, and cloud services.Produce reports, notifications, and trends to uphold data delivery schedulesDeliver solutions by developing, testing, and implementing code and scripts via (but not limited to) <font color=\"lime\">Python</font>, Perl, Shell scripts, PowerShell, etc.IP, DNS, DHCP, network, security, and operating system configuration, administration, and troubleshooting experience on <font color=\"red\">Linux</font>/<font color=\"red\">Unix</font>/CentOS, Windows, and macOS.Manage lifecycle of multiple data sourcesWork closely with data demand stakeholders, such as analysts and data scientists.Work closely with data supply domain experts and the sources systems and platforms providing data.Build self-monitoring, robust, scalable interfaces, and data pipelines for 24/7 operations.Create highly reusable code modules and packages that can be leveraged across the data pipeline.Increase speed to delivery by implementing workload/<font color=\"red\">workflow</font> automation solutions.Demonstrate an ongoing focus on enabling key business results by balancing optimal technology solutions with the needs of stakeholders.Deliver results through caring about customers, using metrics-driven analysis, and communicating the costs and tradeoffs of ideas to stakeholders and top management.\n",
       "\n",
       "REQUIRED QUALIFICATIONS:\n",
       "Experience in maintaining and managing production-level data systems.Strong experience with <font color=\"red\">SQL</font> in on-premises and cloud environments using <font color=\"red\">MySQL</font>, <font color=\"red\">PostgreSQL</font>, IBM DB2, <font color=\"red\">Oracle</font>, <font color=\"red\">SQL Server</font>, or Teradata.Experience with other database and data store technologies, such as NoSQL, key-value, columnar, graph, and document; Hadoop experience a plus.Strong experience importing, exporting, translating, cleaning, and managing a wide range of file types, such as CSV, TSV, TXT, XLS, Spatial, <font color=\"red\">JSON</font>, <font color=\"red\">XML</font>, <font color=\"red\">HTML</font>, KML, and ZIP.Strong experience creating and lifecycle-managing production-level <font color=\"lime\">Python</font> scripts.Strong background in <font color=\"red\">Linux</font>/<font color=\"red\">Unix</font>/CentOS, Windows Server, and Windows desktop support, installation, administration, and optimization; macOS experience a plus.Expertise in data storage and/or data movement that demonstrates knowledge of when to use files, <font color=\"lime\">relational database</font>, streaming, or NoSQL variant.Ability to identify and resolve end-to-end performance, network, <font color=\"red\">server</font>, client, platform, and operating system issues.Well organized with a keen attention to detail and the ability to effectively prioritize and execute multiple tasks.Productive in a virtual and on-premises environment.Expert with <font color=\"lime\">Microsoft Office</font> applications (Word, Outlook, <font color=\"red\">PowerPoint</font>, and Excel) or <font color=\"red\">Linux</font>/macOS equivalents and as a self-sufficient user of Windows, <font color=\"red\">Linux</font>, and macOS desktops.Ability to read, write, speak and understand <font color=\"lime\">English</font>.\n",
       "\n",
       "PREFERRED QUALIFICATIONS:\n",
       "Familiarity with Javascript API, Rest API or Data Extract <font color=\"lime\">APIs</font>.Familiarity with data <font color=\"red\">workflow</font>/data prep platforms, such as Alteryx, Pentaho, or KNIME.Familiarity with automation/configuration management using either Puppet, Chef, or equivalent.Experience in and with IT or technical operations at scale in a production environment.Knowledge of best practices and IT operations in an always-up, always-available service.Experience receiving, converting, and cleansing big data.Experience with <font color=\"red\">visualization</font> or <font color=\"red\">BI</font> tools, such as Tableau, Zoomdata, Microstrategy, or anything Microsoft Power <font color=\"red\">BI</font>.Demonstrated success creating proof of concept experiments or using design of experiment for <font color=\"red\">analytics</font>, machine learning, or <font color=\"red\">visualization</font> tools that include hypothesis, test plans, and outcome analysis.Development, lifecycle management, or operations experience in a DevOps environment a plus.Experience in an <font color=\"red\">Agile</font> environment a plus.\n",
       "\n",
       "EDUCATION:\n",
       "<font color=\"lime\">Bachelor's degree</font> or computer science or engineering, <font color=\"red\">analytics</font>, or data science discipline.Masterâs degree in computer science or engineering, <font color=\"red\">analytics</font>, or data science discipline.Ongoing learning demonstrated through certificates from professional studies, MOOCs, seminars, online courses, and any other deliverable mechanism after earning bachelorâs and masterâs degrees.\n",
       "\n",
       "RELATED WORK EXPERIENCE:\n",
       "- 7- 10+ years of <font color=\"red\">Linux</font>/<font color=\"red\">Unix</font>/CentOS and Windows system admin; macOS experience a plus.\n",
       "7-10+ years of hands-on working experience with RDBMS, <font color=\"red\">SQL</font>, <font color=\"red\">scripting</font>, and <font color=\"lime\">coding</font>;Experience delivering one major system where candidate was responsible for designing the architecture, implementing, operating, and supporting.\n",
       "\n",
       "WORKING CONDITIONS:\n",
       "Charter Technical Engineering CenterHighly collaborative and innovative work spaceOccasional Travel"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "Description\n",
       "It's an exciting time to join the Staples Business Advantage® team. We are the second largest business-to-business delivery company in the world, and we're growing. Staples Business Advantage® is transforming the way we help companies of all sizes thrive by offering a complete assortment of products and services customers want, all at the lowest delivered cost. The foundation of our growth and continued transformation remains our team of dedicated employees who drive our success and uphold our brand promise: We help businesses succeed.\n",
       "\n",
       "\n",
       "The Pricing Senior Analyst resides on a team supporting Staples Business Advantage® Commercial and Enterprise portfolio. This associate must be a highly analytical thinker, data miner, and expert problem solver. The Pricing Senior Analyst is collaborative, highly organized, balances multiple projects, and easily adapts to a fast-paced environment where priorities often shift.\n",
       "\n",
       "We are looking for someone who is energized to make a difference and enjoys a role where they can be innovative and entrepreneurial. Many of our recent projects are focused on enhancing processes and building efficiencies within current systems.\n",
       "\n",
       "Primary Responsibilities:\n",
       "Perform <font color=\"lime\">research</font>, analysis, and data mining services to assist business leaders in making decisions related to the effectiveness and financial impact of price strategy changes.Develop methodology and reports that provide insight into the SBA <font color=\"lime\">C</font>&E business, and recommend scalable plans & solutions that improve selling profits & shape demand.Design, implement, and track customer specific and/or business unit profitability plans.Manage strategic projects for the SBA <font color=\"lime\">C</font>&E division and assist with major corporate initiatives.Develop <font color=\"lime\">coding</font> processes, procedures, and validation methods that ensure accuracy & consistency when retrieving & compiling data from multiple resources.Lead strategy sessions with the relevant team members to develop pricing plans to retain customers and optimize sales. Develop specific offers that blend assortments, prices and deliver expected business results.Recommend scalable solutions based on deep understanding of system functionality & limitations.Recommend potential system enhancements to meet the changing needs to the business.Assist Management with training and onboarding of new associates\n",
       "\n",
       "\n",
       "Qualifications\n",
       "Basic Requirements:\n",
       "Bachelors Degree required (concentration in Business, Statistics, Economics, or a directly related field desirable)Minimum 4-6 years previous work experience required (2-4 years related experience in B2B distribution environment or analytical work desirable)Expert knowledge in <font color=\"lime\">Microsoft Office</font> Suite (<font color=\"lime\">Access</font>/Excel/Powerpoint/Outlook)Excellent <font color=\"lime\">communication skills</font> (in <font color=\"lime\">English</font>), both oral and writtenProven analytical, critical thinking, and problem-solving skillsDemonstrated understanding of financial levers related to pricingAbility to work collaboratively within cross-functional teamsAbility to work well in a fast-paced, dynamic environment  adaptabilityHighly organized, detail-oriented, and able to multi-task a must\n",
       "\n",
       "Preferred Qualifications:\n",
       "Statistical <font color=\"lime\">software</font> skills including SAS, R, <font color=\"red\">SQL</font> and AlteryxPrevious contract pricing experience in a B2B model preferredCPP welcome\n",
       "\n",
       "\n",
       "\n",
       "Staples is an Equal Opportunity Employer. All qualified applicants will receive consideration for employment without regard to race, color, religion, sex, national origin, protected veteran status, disability, or any other basis protected by federal, state, or local law.\n",
       "\n",
       "Staples is an Equal Opportunity Employer. All qualified applicants will receive consideration for employment without regard to race, color, religion, age, sex, sexual orientation, gender identity, national origin, protected veteran status, disability, or any other basis protected by federal, state, or local law."
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
<<<<<<< HEAD
      "sql SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "python +++++++++++\n",
      "sql ++++++++++\n",
      "javascript +++++++++\n",
      "web +++++++\n",
      "engineering ++++++\n",
      "software +++++\n",
      "java +++++\n",
      "development ++++\n",
      "analytics ++++\n",
      "analysis ++++\n",
      "programming ++++\n",
      "backend +++\n",
      "stack +++\n",
      "engineers +++\n",
      "linux ++\n",
      "developer ++\n",
      "react ++\n",
      "agile ++\n",
      "visualization ++\n",
      "design ++\n",
      "\n",
      "python SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "python ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n",
      "engineering +++++++++++++++++++++++++++++++++++++\n",
      "javascript ++++++++++++++++++++++++++++++++++\n",
      "software ++++++++++++++++++++++++++\n",
      "web +++++++++++++++++++++\n",
      "stack +++++++++++++++++++++\n",
      "backend ++++++++++++++++++++\n",
      "engineers ++++++++++++++++++\n",
      "java ++++++++++++++++\n",
      "react +++++++++++++++\n",
      "aws ++++++++++++++\n",
      "development ++++++++++++\n",
      "programming ++++++++++++\n",
      "analysis ++++++++++++\n",
      "analytics ++++++++++\n",
      "developer ++++++++++\n",
      "linux ++++++++++\n",
      "code +++++++++\n",
      "django ++++++++\n",
      "docker ++++++++\n",
      "\n",
      "javascript SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "javascript +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n",
      "python +++++++++++++++++++++++\n",
      "engineering ++++++++++++++++++++\n",
      "web ++++++++++++++++++\n",
      "software ++++++++++++++++\n",
      "stack +++++++++++++++\n",
      "react +++++++++++++\n",
      "backend +++++++++++\n",
      "java ++++++++++\n",
      "engineers +++++++++\n",
      "developer +++++++++\n",
      "development ++++++++\n",
      "code ++++++++\n",
      "programming +++++++\n",
      "aws ++++++\n",
      "node.js ++++++\n",
      "design +++++\n",
      "analytics +++++\n",
      "full-stack ++++\n",
      "frontend ++++\n",
      "\n",
      "java SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "java ++++++++++++++++++++++++++++++++++++++++\n",
      "python ++++++++++++++++\n",
      "javascript +++++++++++++++\n",
      "engineering ++++++++++++++\n",
      "software ++++++++++++\n",
      "web +++++++++++\n",
      "backend ++++++++++\n",
      "engineers ++++++++\n",
      "stack +++++++\n",
      "development ++++++\n",
      "analysis +++++\n",
      "programming +++++\n",
      "aws +++++\n",
      "developer ++++\n",
      "mobile ++++\n",
      "react ++++\n",
      "analytics ++++\n",
      "design ++++\n",
      "code ++++\n",
      "ruby ++++\n",
      "\n",
      "excel SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "analysis +++\n",
      "excel ++\n",
      "engineering ++\n",
      "analyze ++\n",
      "development +\n",
      "communication +\n",
      "engineers +\n",
      "modeling +\n",
      "software +\n",
      "design +\n",
      "access +\n",
      "safe +\n",
      "powerpoint +\n",
      "analysts +\n",
      "planning +\n",
      "ms +\n",
      "imaging \n",
      "sensors \n",
      "economics \n",
      "analytical \n",
      "\n"
     ]
    }
   ],
   "source": [
    "for skill, c in all_matches.items():\n",
    "    most_common = c.most_common(20)\n",
    "    print(skill, \"SUMMARY:\")\n",
    "    print('~~~~~~~~~~~~~~~~~~')\n",
    "    for item, freq in most_common:\n",
    "        print(item, \"+\" * (freq//10))\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
=======
      "\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "Who We Are:\n",
       "\n",
       "\n",
       "Ball Aerospace leads the way in designing, developing and manufacturing innovative aerospace systems. We take on some of the most complex and exciting challenges in the universe-from space and Earth science to national security and intelligence programs.\n",
       "\n",
       "We produce spacecraft, instruments and sensors, RF and microwave technologies, data exploitation solutions, and a variety of advanced aerospace technologies and products. In addition, we pioneered the development of the commercial remote sensing market, producing spacecraft and imaging systems that helped spawn a market-driven demand for imagery.\n",
       "\n",
       "Our success is built on more than products or systems. Our team of more than 3,000 engineers, scientists, technicians and support staff drives all the achievements at Ball Aerospace. Whether contributing to a better understanding of the universe or helping keep our nation safe, our people bring their diverse backgrounds, perspectives and skills together to achieve a common mission.\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "Qualifications:\n",
       "\n",
       "\n",
       "\n",
       "Senior Embedded <font color=\"red\">Software Engineer</font>\n",
       "What You´ll Do:\n",
       "\n",
       "Design, develop and implement both application level and embedded <font color=\"lime\">software</font> for aerospace, avionics and related tactical systems.\n",
       "Perform full <font color=\"lime\">software</font> life cycle functions including <font color=\"lime\">software</font> requirements, architecture, design, code, test, integration and documentation.\n",
       "Maintain a regular and predictable work schedule.\n",
       "Establish and maintain collaborative working relationships within the department, the Strategic Business Units, and the Company. Interact appropriately with others in order to maintain a positive and productive work environment.\n",
       "Perform other duties as necessary.\n",
       "What You´ll Need:\n",
       "\n",
       "<font color=\"lime\">BS</font> degree or higher in Engineering or a related technical field is required plus 8 or more years related experience.\n",
       "Experience in designing, developing, and testing <font color=\"lime\">software</font> for operational systems using <font color=\"lime\">programming</font> languages such as <font color=\"lime\">C</font>/<font color=\"red\">C++</font>, <font color=\"red\">Ruby</font>/<font color=\"lime\">Python</font> and other languages/applications.\n",
       "Understanding of and experience with real-time operating systems including <font color=\"red\">Linux</font>/VxWorks.\n",
       "Experience with embedded <font color=\"lime\">software development</font>.\n",
       "A working knowledge of the <font color=\"lime\">software development</font> lifecycle and activities in each phase.\n",
       "Experience with formal <font color=\"lime\">software development</font> practices including the use of <font color=\"lime\">software</font> version control, <font color=\"lime\">coding</font> standards and style guides.\n",
       "Relevant work experience, senior project experience and/or internship/co-op experience.\n",
       "Good communication, presentation and team skills.\n",
       "In addition to the typical educational and experience requirements, a demonstrated capability to adequately perform the essential functions and responsibilities of the position and exhibit the skills and competencies of the grade level should be considered. Each higher-level degree, i.e., Masters Degree and/or Ph.D., may substitute for two years of experience. Related technical experience may be considered in lieu of education. Degree must be from a university, college, or school which is accredited by an agency recognized by the US Secretary of Education, US Department of Education.\n",
       "Working Conditions:\n",
       "Work is performed in an office, laboratory, production floor, or clean room, outdoors or remote <font color=\"lime\">research</font> environment.\n",
       "May occasionally work in production work centers where use of protective equipment and gear is required.\n",
       "May access other facilities in various weather conditions.\n",
       "Travel and local commute between Ball campuses and other possible non-Ball locations may be required.\n",
       "\n",
       "\n",
       "Relocation:\n",
       "\n",
       "\n",
       "\n",
       "Relocation for this position is Available\n",
       "\n",
       "\n",
       "\n",
       "EEO Statement:\n",
       "\n",
       "\n",
       "US CITIZENSHIP OR PERMANENT RESIDENCY IS REQUIRED\n",
       "\n",
       "Equal Opportunity Employer\n",
       "Minority, Female, Disabled, Lesbian, Gay, Bi-sexual, Transgender and Veterans."
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "The Data Analyst is a 3/4 time (.75 FTE) fully benefited position in the Office of Institutional Research. The Data Analyst assists in maintaining a responsive office by providing data support for institutional planning, decisions, and reporting. The primary role of the analyst is to provide data support to the Office of Institutional Research. The analyst creates data reports and dashboards utilizing Cognos, a <font color=\"lime\">relational database</font> extraction tool which pulls data from our data warehouse. The analyst performs analyses of large data sets, such as aggregating data, analyzing patterns, and tracking longitudinal data. The analyst must be able to maintain accurate data reporting on projects with shifting priorities and tight deadlines and demonstrate the ability to work both independently and collaboratively. The position supports departments on both the CentreTech and Lowry campuses with some travel between campuses required (approximately 15 minutes).\n",
       "\n",
       "The ideal candidate will demonstrate a strong commitment to the quality and accuracy of data and <font color=\"lime\">research</font> reports; show attention to detail while also being able to see the larger significance of <font color=\"lime\">research</font> findings; and bring creativity and an enthusiasm for helping people understand and use information.\n",
       "\n",
       "Duties and Responsibilities:\n",
       "\n",
       "Design, produce and validate reports and dashboards using Cognos Query Studio, Cognos\n",
       "Report Studio, and other Cognos modules as developed\n",
       "Provide technical support for data issues or inquiries related to developed reports\n",
       "Work with report end users to determine data/dashboard requirements\n",
       "Write user-friendly documentation on all developed reports\n",
       "Research, gather, analyze, and summarize information for a broad range of internal and external audiences\n",
       "Support the design, development and administration of IR surveys\n",
       "Perform additional duties as assigned\n",
       "Required Qualifications:\n",
       "\n",
       "Understanding of <font color=\"lime\">relational database</font> management systems\n",
       "Demonstrated ability to identify, analyze, and report complex information\n",
       "Demonstrated ability to communicate complex information clearly and concisely to non-technical audiences verbally, graphically, and in written reports\n",
       "Proficiency using <font color=\"lime\">Microsoft Office</font>, Web applications, relational databases (such as <font color=\"lime\">Access</font>) and statistical <font color=\"lime\">software</font> (SPSS preferred)\n",
       "<font color=\"lime\">Bachelors degree</font> or equivalent combination of education and experience\n",
       "Preferred Qualifications:\n",
       "\n",
       "Experience with Banner <font color=\"lime\">software</font>\n",
       "Experience with Cognos <font color=\"lime\">software</font>\n",
       "Experience designing dashboards\n",
       "Documented experience creating reports from a data warehouse\n",
       "1-year <font color=\"red\">SQL</font> <font color=\"lime\">programming</font> experience\n",
       "1-year experience working in Institutional Research\n",
       "Salary: Anticipated salary placement for this part-time position is low to mid $30's depending on experience and education. CCA offers an excellent benefit plan. Leave and holiday benefits are also included. For more information on the insurance benefits, click on the following link: Benefits\n",
       "\n",
       "Deadline to Submit Application Material: A review of applications will begin on July13, 2018 and will continue until the position is filled. This position will remain posted until the position is filled.\n",
       "\n",
       "Application Process: When submitting your application material, please include an unofficial copy of your college transcripts showing the highest degree achieved. Unofficial transcripts should be submitted to HR@ccaurora.edu.\n",
       "\n",
       "If you have questions regarding this position, please contact us at HR@ccaurora.edu\n",
       "\n",
       "By submitting an application for this announced position, applicants are certifying that all statements, information and documents provided are true, complete and correct to the best of my knowledge and are made in good faith. Further, applicants understand that omissions, misleading, false or untrue information, or any attempt at fraud or deceit in any manner connected with this application and/or subsequent testing may result in them not being considered for jobs with the Community College of Aurora; may constitute grounds for discipline and/or termination after hire; and/or constitute grounds for further actions pursuant to law.\n",
       "\n",
       "The Federal Clery Act (The Student Right to Know and Campus Security Act of 1990) requires all institutions of higher learning to make available to prospective employees our agency's Annual Security Report. A copy of this information is available on the CCA website at the Student Right to Know page. A paper copy of this report can be obtained at the College Security Office upon request. This report includes statistics for the previous three years concerning crimes that occurred on campus or on property controlled or owned by Community College of Aurora, as well as public property within, or immediately adjacent to and accessible from, our campuses.\n",
       "\n",
       "Notice to all Applicants:\n",
       "\n",
       "Proof of eligibility to work in the United States must be produced within three (3) days of hire.\n",
       "Direct deposit of payroll is a condition of employment.\n",
       "Final candidate is subject to a criminal background check prior to final selection process.\n",
       "Final candidate is required to submit official transcripts to Human Resources within fourteen (14) days of hire.\n",
       "CCA is affiliated with the Colorado Public Employees Retirement Association (PERA) and as such, employees contribute to PERA in lieu of Social Security for retirement benefits. For more information, visit the COPERA web page.\n",
       "Former employees of the Colorado Community College System or one of its 13 colleges, who were disciplinarily terminated or resigned in lieu of termination, must disclose this information in your application material.\n",
       "Community College of Aurora Inclusive Excellence Statement:\n",
       "\n",
       "You matter. You are valued. You belong. CCA is a community that is committed to equity, diversity, and inclusion through Inclusive Excellence. We can only achieve this together.\n",
       "\n",
       "CCA embraces Inclusive Excellence because we want our students, staff, and faculty to learn and contribute within an inclusive environment. This means members of our College community will be active, respectful, and mindful of equity, diversity, and inclusion at all levels of engagement. Inclusive Excellence will provide a foundation for student and institutional success.\n",
       "\n",
       "For more information on CCAs commitment to Inclusive Excellence please visit the Inclusive Excellence page.\n",
       "\n",
       "Non-Discrimination Statement: The Community College of Aurora prohibits and will not tolerate discrimination or harassment that violates federal or state law, Board Policy 3-120 or Board Policy 4-120. The College does not discriminate on the basis of sex/gender, race, color, age, creed, national or ethnic origin, physical or mental disability, veteran status, pregnancy status, religion or sexual orientation. The College complies with Titles VI and VII of the Civil Rights Act of 1964, the Civil Rights Act of 1991, the Education Amendments of 1972 (Title IX), the Age Discrimination in Employment Act, the Rehabilitation Act of 1973, the Americans with Disabilities Act, Pregnancy Discrimination Act of 1978, Vietnam Era Veterans Readjustment Assistance Act of 1974; Executive Order 11246, and sections 24-34-301, <font color=\"lime\">C</font>.R.S. et seq.\n",
       "\n",
       "For information regarding civil rights or grievance procedures, contact our Title IX Compliance/Equal Opportunity Officer, Cindy Hesse, Director of Human Resources at 16000 E. CentreTech Parkway, Suite A207, Aurora, Colorado 80011 or by phone at 303-360-4752, or e-mail at Cindy.Hesse@CCAurora.edu.\n",
       "\n",
       "CCA Mission: \"The Community College of Aurora serves our diverse community by providing high quality instruction and support services to prepare students for transfer and employment.\"\n",
       "\n",
       "Vision: We aspire to be the college where every student succeeds."
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
<<<<<<< HEAD
      "sql SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "python 11\n",
      "sql 10\n",
      "javascript 9\n",
      "web 7\n",
      "engineering 6\n",
      "software 5\n",
      "java 5\n",
      "development 4\n",
      "analytics 4\n",
      "analysis 4\n",
      "programming 4\n",
      "backend 3\n",
      "stack 3\n",
      "engineers 3\n",
      "linux 2\n",
      "developer 2\n",
      "react 2\n",
      "agile 2\n",
      "visualization 2\n",
      "design 2\n",
      "aws 2\n",
      "code 2\n",
      "modeling 2\n",
      "cloud 2\n",
      "communication 2\n",
      "coding 2\n",
      "analysts 2\n",
      "matlab 2\n",
      "mobile 1\n",
      "node.js 1\n",
      "server 1\n",
      "php 1\n",
      "models 1\n",
      "ruby 1\n",
      "jquery 1\n",
      "docker 1\n",
      "statistics 1\n",
      "git 1\n",
      "api 1\n",
      "database 1\n",
      "mysql 1\n",
      "full-stack 1\n",
      "perl 1\n",
      "css 1\n",
      "c++ 1\n",
      "databases 1\n",
      "access 1\n",
      "statistical 1\n",
      ".net 1\n",
      "angular 1\n",
      "\n",
      "python SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "python 92\n",
      "engineering 37\n",
      "javascript 34\n",
      "software 26\n",
      "web 21\n",
      "stack 21\n",
      "backend 20\n",
      "engineers 18\n",
      "java 16\n",
      "react 15\n",
      "aws 14\n",
      "development 12\n",
      "programming 12\n",
      "analysis 12\n",
      "analytics 10\n",
      "developer 10\n",
      "linux 10\n",
      "code 9\n",
      "django 8\n",
      "docker 8\n",
      "design 8\n",
      "frontend 7\n",
      "elasticsearch 7\n",
      "cloud 6\n",
      "mobile 6\n",
      "research 6\n",
      "agile 6\n",
      "postgresql 5\n",
      "c++ 5\n",
      "sql 5\n",
      "ruby 5\n",
      "postgres 5\n",
      "node.js 5\n",
      "numpy 5\n",
      "mongodb 5\n",
      "git 4\n",
      "coding 4\n",
      "front-end 4\n",
      "full-stack 4\n",
      "access 4\n",
      "modeling 4\n",
      "visualization 4\n",
      "communication 4\n",
      "android 4\n",
      "api 4\n",
      "ios 3\n",
      "spark 3\n",
      "redis 3\n",
      "matlab 3\n",
      "node 3\n",
      "\n",
      "javascript SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "javascript 83\n",
      "python 23\n",
      "engineering 20\n",
      "web 18\n",
      "software 16\n",
      "stack 15\n",
      "react 13\n",
      "backend 11\n",
      "java 10\n",
      "engineers 9\n",
      "developer 9\n",
      "development 8\n",
      "code 8\n",
      "programming 7\n",
      "aws 6\n",
      "node.js 6\n",
      "design 5\n",
      "analytics 5\n",
      "full-stack 4\n",
      "frontend 4\n",
      "ruby 4\n",
      "elasticsearch 4\n",
      "linux 4\n",
      "mobile 4\n",
      "front-end 4\n",
      "cloud 4\n",
      "mongodb 4\n",
      "analysis 3\n",
      "agile 3\n",
      "git 3\n",
      "postgresql 3\n",
      "css 3\n",
      "sql 3\n",
      "django 3\n",
      "docker 3\n",
      "angularjs 3\n",
      "numpy 3\n",
      "node 2\n",
      "html 2\n",
      "postgres 2\n",
      "api 2\n",
      "php 2\n",
      "android 2\n",
      "frameworks 2\n",
      "ios 2\n",
      "redis 2\n",
      "research 2\n",
      "ui 2\n",
      "jquery 2\n",
      "c++ 2\n",
      "\n",
      "java SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "java 40\n",
      "python 16\n",
      "javascript 15\n",
      "engineering 14\n",
      "software 12\n",
      "web 11\n",
      "backend 10\n",
      "engineers 8\n",
      "stack 7\n",
      "development 6\n",
      "analysis 5\n",
      "programming 5\n",
      "aws 5\n",
      "developer 4\n",
      "mobile 4\n",
      "react 4\n",
      "analytics 4\n",
      "design 4\n",
      "code 4\n",
      "ruby 4\n",
      "linux 4\n",
      "agile 4\n",
      "android 3\n",
      "docker 3\n",
      "cloud 3\n",
      "git 3\n",
      "frontend 3\n",
      "node.js 3\n",
      "coding 3\n",
      "scala 2\n",
      "sql 2\n",
      "ios 2\n",
      "c++ 2\n",
      "mongodb 2\n",
      "api 2\n",
      "communication 2\n",
      "elasticsearch 2\n",
      "kafka 2\n",
      "postgresql 2\n",
      "php 2\n",
      "research 2\n",
      "matlab 2\n",
      "spark 1\n",
      "server 1\n",
      "app 1\n",
      "redis 1\n",
      "modeling 1\n",
      "angular 1\n",
      "front-end 1\n",
      "perl 1\n",
      "\n",
      "excel SUMMARY:\n",
      "~~~~~~~~~~~~~~~~~~\n",
      "analysis 3\n",
      "excel 2\n",
      "engineering 2\n",
      "analyze 2\n",
      "development 1\n",
      "communication 1\n",
      "engineers 1\n",
      "modeling 1\n",
      "software 1\n",
      "design 1\n",
      "access 1\n",
      "safe 1\n",
      "powerpoint 1\n",
      "analysts 1\n",
      "planning 1\n",
      "ms 1\n",
      "imaging 0\n",
      "sensors 0\n",
      "economics 0\n",
      "analytical 0\n",
      "leadership 0\n",
      "web 0\n",
      "research 0\n",
      "manage 0\n",
      "python 0\n",
      "statistics 0\n",
      "models 0\n",
      "databases 0\n",
      "analytics 0\n",
      "it 0\n",
      "java 0\n",
      "programming 0\n",
      "visualization 0\n",
      "hardware 0\n",
      "math 0\n",
      "finance 0\n",
      "efficiency 0\n",
      "analyst 0\n",
      "collaborate 0\n",
      "windows 0\n",
      "sql 0\n",
      "interpersonal 0\n",
      "writing 0\n",
      "code 0\n",
      "statistical 0\n",
      "mathematics 0\n",
      "measurement 0\n",
      "optimization 0\n",
      "initiative 0\n",
      "gis 0\n",
=======
      "\n",
      "\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "The Data Analyst is a 3/4 time (.75 FTE) fully benefited position in the Office of Institutional Research. The Data Analyst assists in maintaining a responsive office by providing data support for institutional planning, decisions, and reporting. The primary role of the analyst is to provide data support to the Office of Institutional Research. The analyst creates data reports and dashboards utilizing Cognos, a <font color=\"lime\">relational database</font> extraction tool which pulls data from our data warehouse. The analyst performs analyses of large data sets, such as aggregating data, analyzing patterns, and tracking longitudinal data. The analyst must be able to maintain accurate data reporting on projects with shifting priorities and tight deadlines and demonstrate the ability to work both independently and collaboratively. The position supports departments on both the CentreTech and Lowry campuses with some travel between campuses required (approximately 15 minutes).\n",
       "\n",
       "The ideal candidate will demonstrate a strong commitment to the quality and accuracy of data and <font color=\"lime\">research</font> reports; show attention to detail while also being able to see the larger significance of <font color=\"lime\">research</font> findings; and bring creativity and an enthusiasm for helping people understand and use information.\n",
       "\n",
       "Duties and Responsibilities:\n",
       "\n",
       "Design, produce and validate reports and dashboards using Cognos Query Studio, Cognos\n",
       "Report Studio, and other Cognos modules as developed\n",
       "Provide technical support for data issues or inquiries related to developed reports\n",
       "Work with report end users to determine data/dashboard requirements\n",
       "Write user-friendly documentation on all developed reports\n",
       "Research, gather, analyze, and summarize information for a broad range of internal and external audiences\n",
       "Support the design, development and administration of IR surveys\n",
       "Perform additional duties as assigned\n",
       "Required Qualifications:\n",
       "\n",
       "Understanding of <font color=\"lime\">relational database</font> management systems\n",
       "Demonstrated ability to identify, analyze, and report complex information\n",
       "Demonstrated ability to communicate complex information clearly and concisely to non-technical audiences verbally, graphically, and in written reports\n",
       "Proficiency using <font color=\"lime\">Microsoft Office</font>, Web applications, relational databases (such as <font color=\"lime\">Access</font>) and statistical <font color=\"lime\">software</font> (SPSS preferred)\n",
       "<font color=\"lime\">Bachelors degree</font> or equivalent combination of education and experience\n",
       "Preferred Qualifications:\n",
       "\n",
       "Experience with Banner <font color=\"lime\">software</font>\n",
       "Experience with Cognos <font color=\"lime\">software</font>\n",
       "Experience designing dashboards\n",
       "Documented experience creating reports from a data warehouse\n",
       "1-year <font color=\"red\">SQL</font> <font color=\"lime\">programming</font> experience\n",
       "1-year experience working in Institutional Research\n",
       "Salary: Anticipated salary placement for this part-time position is low to mid $30's depending on experience and education. CCA offers an excellent benefit plan. Leave and holiday benefits are also included. For more information on the insurance benefits, click on the following link: Benefits\n",
       "\n",
       "Deadline to Submit Application Material: A review of applications will begin on July13, 2018 and will continue until the position is filled. This position will remain posted until the position is filled.\n",
       "\n",
       "Application Process: When submitting your application material, please include an unofficial copy of your college transcripts showing the highest degree achieved. Unofficial transcripts should be submitted to HR@ccaurora.edu.\n",
       "\n",
       "If you have questions regarding this position, please contact us at HR@ccaurora.edu\n",
       "\n",
       "By submitting an application for this announced position, applicants are certifying that all statements, information and documents provided are true, complete and correct to the best of my knowledge and are made in good faith. Further, applicants understand that omissions, misleading, false or untrue information, or any attempt at fraud or deceit in any manner connected with this application and/or subsequent testing may result in them not being considered for jobs with the Community College of Aurora; may constitute grounds for discipline and/or termination after hire; and/or constitute grounds for further actions pursuant to law.\n",
       "\n",
       "The Federal Clery Act (The Student Right to Know and Campus Security Act of 1990) requires all institutions of higher learning to make available to prospective employees our agency's Annual Security Report. A copy of this information is available on the CCA website at the Student Right to Know page. A paper copy of this report can be obtained at the College Security Office upon request. This report includes statistics for the previous three years concerning crimes that occurred on campus or on property controlled or owned by Community College of Aurora, as well as public property within, or immediately adjacent to and accessible from, our campuses.\n",
       "\n",
       "Notice to all Applicants:\n",
       "\n",
       "Proof of eligibility to work in the United States must be produced within three (3) days of hire.\n",
       "Direct deposit of payroll is a condition of employment.\n",
       "Final candidate is subject to a criminal background check prior to final selection process.\n",
       "Final candidate is required to submit official transcripts to Human Resources within fourteen (14) days of hire.\n",
       "CCA is affiliated with the Colorado Public Employees Retirement Association (PERA) and as such, employees contribute to PERA in lieu of Social Security for retirement benefits. For more information, visit the COPERA web page.\n",
       "Former employees of the Colorado Community College System or one of its 13 colleges, who were disciplinarily terminated or resigned in lieu of termination, must disclose this information in your application material.\n",
       "Community College of Aurora Inclusive Excellence Statement:\n",
       "\n",
       "You matter. You are valued. You belong. CCA is a community that is committed to equity, diversity, and inclusion through Inclusive Excellence. We can only achieve this together.\n",
       "\n",
       "CCA embraces Inclusive Excellence because we want our students, staff, and faculty to learn and contribute within an inclusive environment. This means members of our College community will be active, respectful, and mindful of equity, diversity, and inclusion at all levels of engagement. Inclusive Excellence will provide a foundation for student and institutional success.\n",
       "\n",
       "For more information on CCAs commitment to Inclusive Excellence please visit the Inclusive Excellence page.\n",
       "\n",
       "Non-Discrimination Statement: The Community College of Aurora prohibits and will not tolerate discrimination or harassment that violates federal or state law, Board Policy 3-120 or Board Policy 4-120. The College does not discriminate on the basis of sex/gender, race, color, age, creed, national or ethnic origin, physical or mental disability, veteran status, pregnancy status, religion or sexual orientation. The College complies with Titles VI and VII of the Civil Rights Act of 1964, the Civil Rights Act of 1991, the Education Amendments of 1972 (Title IX), the Age Discrimination in Employment Act, the Rehabilitation Act of 1973, the Americans with Disabilities Act, Pregnancy Discrimination Act of 1978, Vietnam Era Veterans Readjustment Assistance Act of 1974; Executive Order 11246, and sections 24-34-301, <font color=\"lime\">C</font>.R.S. et seq.\n",
       "\n",
       "For information regarding civil rights or grievance procedures, contact our Title IX Compliance/Equal Opportunity Officer, Cindy Hesse, Director of Human Resources at 16000 E. CentreTech Parkway, Suite A207, Aurora, Colorado 80011 or by phone at 303-360-4752, or e-mail at Cindy.Hesse@CCAurora.edu.\n",
       "\n",
       "CCA Mission: \"The Community College of Aurora serves our diverse community by providing high quality instruction and support services to prepare students for transfer and employment.\"\n",
       "\n",
       "Vision: We aspire to be the college where every student succeeds."
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
>>>>>>> 21c71c26700cd73c1f638f4ebdaa799646f73fa4
      "\n"
     ]
    }
   ],
   "source": [
    "skills = load_skills_df()\n",
    "for i,job in top_jobs.iterrows():\n",
    "    highlight_phrases_from_list2(job['job_summary'], skills)\n",
    "    print ('\\n\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
